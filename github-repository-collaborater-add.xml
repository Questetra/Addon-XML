<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
    <engine-type>3</engine-type>
    <addon-version>2</addon-version>
    <label>GitHub: Add Repository Collaborator</label>
    <label locale="ja">GitHub: リポジトリコラボレーター追加</label>
    <last-modified>2024-08-27</last-modified>
    <license>(C) Questetra, Inc. (MIT License)</license>
    <summary>
        This item adds a collaborator to a specified repository on GitHub.
    </summary>
    <summary locale="ja">
        この工程は、GitHub の指定したリポジトリにコラボレーターを追加します。
    </summary>
    <help-page-url>https://support.questetra.com/bpmn-icons/service-task-github-collaborator-add/</help-page-url>
    <help-page-url locale="ja">https://support.questetra.com/ja/bpmn-icons/service-task-github-collaborator-add/</help-page-url>
    <configs>
        <config name="conf_Auth" required="true" form-type="OAUTH2" auth-type="TOKEN">
            <label>C1: Personal Access Token (fine-grained)</label>
            <label locale="ja">C1: 個人用アクセストークン（fine-grained）</label>
        </config>
        <config name="conf_RepositoryUrl" required="true" form-type="SELECT" select-data-type="STRING_TEXTFIELD" editable="true">
            <label>C2: Repository's URL (https://github.com/{owner}/{repository})</label>
            <label locale="ja">C2: リポジトリの URL (https://github.com/{owner}/{repository})</label>
        </config>
        <config name="conf_Name" required="true" form-type="SELECT" select-data-type="STRING_TEXTFIELD" editable="true">
            <label>C3: The handle of the GitHub user to invite</label>
            <label locale="ja">C3: 招待する GitHub ユーザのハンドル名</label>
        </config>
        <config name="conf_Role" form-type="SELECT_ITEM">
            <label>C4: Permission to set (Select in Organization Repository)</label>
            <label locale="ja">C4: 付与する権限（組織のリポジトリで選択）</label>
                <item value="pull">
                    <label>pull</label>
                </item>
                <item value="push">
                    <label>push</label>
                </item>
        </config>		
    </configs>

    <script><![CDATA[

const API_VERSION = '2022-11-28';
const API_VERSION_HEADER = 'X-GitHub-Api-Version';

function main() {
    ////// == 工程コンフィグ・ワークフローデータの参照 / Config & Data Retrieving ==
    const auth = configs.getObject('conf_Auth');
    const ownerAndRepo = retrieveOwnerAndRepo();
    const handle = retrieveHandle();
    let role = configs.get("conf_Role");
    //if (role === null || role === "") {
    //    role = 'push';
    //}

    ////// == 演算 / Calculating ==
    addCollaborator(auth, ownerAndRepo, handle, role);
}

/**
  * config からリポジトリの URL を読み出し、API に必要な文字列を取り出す
  * @return {String} ownerAndRepo
  */
function retrieveOwnerAndRepo() {
    const repositoryUrlDef = configs.getObject('conf_RepositoryUrl');
    let repositoryUrl;
    if (repositoryUrlDef === null) { // 固定値で指定
        repositoryUrl = configs.get('conf_RepositoryUrl');
    } else {
    repositoryUrl = engine.findData(repositoryUrlDef);
    }
    if (repositoryUrl === null) {
        throw new Error("Repository's URL is blank.");
    }
    const ownerAndRepo = repositoryUrl.replace("https://github.com/", "");
    engine.log(ownerAndRepo); //test 確認用
    return ownerAndRepo;
}

/**
  * config から招待する GitHub ユーザのハンドル名 を読み出す
  * @return {String} handle
  */
function retrieveHandle() {
    const handleDef = configs.getObject('conf_Name');
    let handle;
    if (handleDef === null) { // 固定値で指定
        handle = configs.get('conf_Name');
    } else {
    handle = engine.findData(handleDef);
    }
    if (handle === null) {
        throw new Error("handle is blank.");
    }
    return handle;
}

/**
 * リポジトリにコラボレータを追加
 * @param {AuthSettingWrapper} auth HTTP 認証設定
 * @param {String} ownerAndRepo {owner}/{repo}
 * @param {String} handle 招待する GitHub ユーザのハンドル名
 * @param {String} role 付与する権限
 */
function addCollaborator(auth, ownerAndRepo, handle, role) {
    //const url = `https://api.github.com/repos/${encodeURIComponent(ownerAndRepo)}/collaborators/${handle}`;
    const url = `https://api.github.com/repos/${ownerAndRepo}/collaborators/${handle}`;
    engine.log(url); //test 確認用

    const response = httpClient.begin()
        .header(API_VERSION_HEADER, API_VERSION)
        .authSetting(auth)
        .queryParam("permission", `${role}`)
        .put(url);

    const status = response.getStatusCode();
    const responseStr = response.getResponseAsString();
    if (status !== 201) {
        engine.log(responseStr);
        throw new Error(`Failed to add a collaborator. status: ${status}`);
    }
};

]]></script>

    <icon>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAABM9JREFUWEfF
        V2tQlFUYfs4ugiKgePkTiE3gCIssGWRhg1EwaE2OUZNjVDIFEwyJM12MSZKgokkNUdZNMhwCCg0p
        Bi8UxGVRblkgLHFJ12ZipImBLiAOg7h7mvfT/dz99lt2sR+8v3bPe3vOez0fw/+gqKgoF1LX6XQ3
        79YMc1bxvuBgP2ZSRjHGH4SJqcCwGsCi2/pj4PgVCt7HOfuJK4y633p7B52x7RBAgCo0GCYeD4bn
        AKxyxiiAy+A4CQUrM/R1986kYxdAWFjYvH8nb6YoOE/igNpJx1ZiDNCbGCtcvMCloKOjY1rOhiyA
        ALXal93gb3PG0u7GsVSHca7hrmyfQa+/asOTHpBzTCMLQKIj5wqFAiaTyZGYmX8M85AlBWEVAQr7
        +PUbufZu7uvrg+SkV3B/aAj8VqyAu7u7AGB09C8MXLqEH+oacKK8wi4gioTXQtc3LdNhBcBfFZrG
        OM+Xs7AjNRlpqSmgW89Evw8OIiExGUNDf8iKccZ2Xunr1piZIgCqdsZ5mbTgvL0Xo7ysFPeu9HM2
        1EJU9uXm4VhRiY0OFSZnLN7cHXcABKpzwLBbqlH1zddQBQU67dxScGv8dlzs6rbV5fjIMKDPIIYA
        gIaMwqSsk/b5i/Hb8N677wgGJicnsSfrA6S9loKVfn7CLaempqBUKuHq6gqj0Sjkf8H8+Xgmboug
        MzY2hnWPRMkV6mWTwhhDw0oA4B+k3s6AYkuoi7y80N7cCBcXYdqCchuzabPwe/nyZRgZGRXFyanS
        RYmJieuIeGgdSoo+F3nfVlYhPSPTJgocSLjSry8RAASoQjTgbIelVPy2rcjOFKIk0MjoKNZviHaY
        Crr93pz3Rbmx8XGEPxxpq8f4YUNfT9otAIHqejA8bil1+GAuNsbGiEd0C7qNI6IuudDaBIqgmQJD
        1sJolMwLjgbDgD76FoAgNU0oH0vjjbXVoL4nonyvXrPWkW+Rn5+3H09sjBX/U1u2trVL9YcM/Xpf
        Riv16vDf/wDwsJT45eIFuLm5CUdUYIEhDzgN4OOcbDwb97Qor9EWIF97RKo/YejXe9oF0Ha+AcuW
        LhWV1j8abVV4M6GpPHkca4JVoshb6btRdfqsPAB7Kag48SVC1SGiErUYtaEjWrLEGy26OrF7SD7y
        sVj8OTwsnwJ7RUgdQJ1gSY4KkSJGwH187hHV7KbPqghl2pBGcPv5RmH2U89T7xNRO3Z2diEjMxvU
        YkQ0sOK2bBbCLt0V39XUYufru2wDZ9mGcoOINPI+2YunntyE6elpYcq99MLzgiGacOERG0SjSS8n
        IH3XGzZOqHvCIyJx7dqEDc9qENkbxR4eC9FUXwMvT090detxvLwCqwL8cfpMNfr6B0SjFJ3Wpnob
        J3n5WnxacFSubKxH8e06kF1GVFS11aeEwUKjVt/TA925ZhQVl4qG6V3Q/XOblSPtkaM4qNHK16x0
        GQkA7Kxj4lE9fFH4mbgVzzW3IPHVVNG4p6cHOn9sEf7Tgtp/4BCKS7+SdW53HZP0TA8S4lNbfpi9
        B1WnzqKw6M7uooX1/ZlK1NTW4cAhje3YtYBi90FCMo6eZPLxdP7U4ZNMSMUsHqXOuxYkHT9KzQbn
        9FluBjGnHyaWoZ2zTzNpfufs43SWhTZr8f8AaTovPzYDLOEAAAAASUVORK5CYII=
    </icon>

    <test><![CDATA[



]]></test>
</service-task-definition>
