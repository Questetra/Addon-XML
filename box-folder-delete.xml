<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<last-modified>2019-08-02</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>1</engine-type>
<label>Box: Delete File</label>
<label locale="ja">Box: ファイル削除</label>
<summary>Delete files or folders on Box.You can delete multiple files or folders at once.When you delete multiple ones,you should write one file/folder ID on each line.</summary>
<summary locale="ja">Box上のファイルやフォルダを削除します。一度に複数の削除が可能です。複数削除する場合、データ項目では1行につき1つずつIDを書くようにしてください。</summary>
<help-page-url>https://support.questetra.com/addons/box-folder-delete/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/box-folder-delete/</help-page-url>
<configs>
  <config name="OAuth2" required="true" form-type="OAUTH2"
   oauth2-setting-name="https://app.box.com/api/oauth2/root_readwrite">
    <label>C1: OAuth2 Setting Name</label>
    <label locale="ja">C1: OAuth2 設定名</label>
  </config>
  <config name="FolderIdsItem" form-type="SELECT" select-data-type="STRING" required="true">
    <label>C2: Data Item with File/ Folder IDs to delete</label>
    <label locale="ja">C2: 削除するファイル・フォルダ ID が保存されている文字型データ項目</label>
  </config>
</configs>

<script><![CDATA[
main();
function main(){
  const folderIds = engine.findDataByNumber(configs.get("FolderIdsItem"));
  if (folderIds == null) {
    throw "Folder IDs aren't set.";
  }
  const linesArray = folderIds.split("\n");
  const numOfLines = linesArray.length;
  if (numOfLines > httpClient.getRequestingLimit()){
  	throw "Number of File IDs is over the limit."
  }
  const token = httpClient.getOAuth2Token(configs.get("OAuth2"));
  for (let i = 0; i < numOfLines; i++){
    deleteFolder(token, linesArray[i])
  }
}
function deleteFolder(token, folderId) {
  const url = 'https://api.box.com/2.0/folders/' + folderId;
  let response = httpClient.begin()
    .bearer(token)
    .queryParam("recursive","true")
    .delete(url);
  const status = response.getStatusCode();
  if (status >= 300) {
    const error = "Failed to delete:" + folderId + "\n" + status + "\n" + response.getResponseAsString();
    throw error;
  }else{
    engine.log("Folder ID:" + folderId + "\n" + "status:" + status + "\n"+"delete successful" + "\n");
  }
}

]]></script>
  
  <icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAD/UlEQVRYR82XbWibVRTHf/fJ2jXJ
2qSd65x11aC0YgJWZUwEWZ0D/SJaHYKKmgykbL70Bf2k4IYwZOKWOhFRMM9QZxHUjSEo+7AOlA1E
7WSRThzdqq1tWWxjm7Zrk1y5N+SlydM2XdvN50sebs5z7u+e8z/n3iu4xo9Y1Pz+3x6F5BagAYQb
oX4BSTfIUaAbIboIeY8W63dhAH+vGyZaQLYihLsox1LBiCA4OjA9CmzOZ34Af9gP8kDRE+dPo0GM
AObtR+YimBvAfzaIEC1FrXghIymDmL42KzNrgMBZE8RzC/ld1P8SE9MbyP+mEGA5V16Ykg5MX2vu
8GwAlXNBaFErW6yxFE25msgCaLXHeq9YcMWCaGE6PenqyAEI70bwRrF+lmQn2YPp3a18ZAECYVWv
rrTj0I4bqHLaeOTgn0uay/JjFQXTV5kFUB1OyK9zjYeC9ThKBeW7epYfQHfPlBZSEbBQ/nBHCmDN
zpUCkLoiUgCBcBegenzmUQDO1QaHT0dpqC3T4yd7YrzyxZB+33V/Jds3VbBmtUH/SJzmQwN07ryR
7r4p2jtTNh88uwHPdaU8uP+iVRRPEvI2pgEuADflA6wrtxV8+GPvJBcuzfDY3RXYjBzgfxNU2A0M
AW2fD1Jht/FmUzWx6STuFyyiqDYw03tnGkDmz6QioADUZO98F8HtMHh521o9lpQwNSMxvx/l9PkJ
XtpWxSaPnZFYArfDRmQ8oeFcDhvvHv+Hts5Bax2FvGJeAFUFW97q5Yc/JrWDVx9ay74n1uv3Iz+P
0fRetkIiB+uxlxj80jfFvbfatc2Jnhhb91mGPwWUA1CQgoH9dawrX0VN+zmGxxLa/qnNLj5rrtHv
ShtPf9ifWdnfB+p02X7z6zhNd5Xr8U9PRXnmo6zN7DDIM4R8DXOK8NRrHu65xY7K+QNvX2SDaxXH
Wmqpu75U+1FhVsL78qcxDjfX8ORml05BeZmN6YTUDUalQenh/RMjC4jQogwb6x189eJGKp02YpeT
2AxBWYmgLzLDwGhcw8UTaJG57AaT0xIlJGXTcTyi09HcWMml8QTVLecKAWRuGVo0IvXF1tuc7N1e
rUspnpSE+y+z4+N+/hqJ88nzNdxX58BRajAYjbPn6DB7H1/P70PTPNzRpyf8tr2WjVUleF8/bwGQ
24jU33mt2Fq2yzYaJeTVx7v/0WaktmMxoaohsyEt23pnO4oiHTcXbsfK6JoeSNKUK3oky54D0tNd
vUMp8hAhnz8/rVfpWF648vkjkEmHPqiYSxBmFCn8V3YxyUDoq1krAnWcLrZCokjU1Sy4tKtZfsJS
l9NGhGgA6QZxR8pEngExipTdYHTNt+LiNbBCTSDf7X8FbX8wYecpbwAAAABJRU5ErkJggg==</icon>
</service-task-definition>