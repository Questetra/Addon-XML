<?xml version="1.0" encoding="UTF-8"?><service-task-definition>

<label>(Any Website): File Download</label>
<label locale="ja">(任意Webサイト): ファイル ダウンロード</label>

<summary>Downloads a file and adds to file-type data. The GET request to the URL is thrown and the response is saved as a file.</summary>
<summary locale="ja">ファイルをダウンロードし、ファイル型データに追加します。指定したURLへGETリクエストが投げられ、そのレスポンスがファイルとして保存されます。</summary>

<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>1</engine-type>
<last-modified>2019-02-28</last-modified>

<help-page-url>https://support.questetra.com/addons/any-website-file-download/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/any-website-file-download/</help-page-url>

<configs>
  <config name="conf_DataIdA" required="true" form-type="TEXTFIELD" el-enabled="true">
    <label>C1: File URL</label>
    <label locale="ja">C1: ダウンロードファイルの URL</label>
  </config>
  <config name="conf_DataIdB" required="true" form-type="SELECT" select-data-type="FILE">
    <label>I1: FILE DATA for Downloaded File</label>
    <label locale="ja">I1: ダウンロードファイルが追加格納されるファイル型データ</label>
  </config>
  <config name="conf_SaveAs" required="true" el-enabled="true" form-type="TEXTFIELD">
    <label>C2: Downloaded File Name</label>
    <label locale="ja">C2: ダウンロードファイル名</label>
  </config>
</configs>

<script><![CDATA[
//// == Config Retrieving / 工程コンフィグの参照 ==
let fileUrl = configs.get( "conf_DataIdA" ) + "";
const dataIdB = configs.get( "conf_DataIdB" ) + "";
const saveAs  = configs.get( "conf_SaveAs" ) + "";
// convert 'java.lang.String' to 'javascript string'


//// == Data Retrieving / ワークフローデータの参照 ==
if ( ! fileUrl.startsWith('http') ) {
  throw "Invalid URL. URL must start with either http or https.";
}
//let UrlforName = decodeURI(fileUrl);

let processFiles = engine.findDataByNumber( dataIdB );
// java.util.ArrayList <com.questetra.bpms.core.event.scripttask.QfileView>
if (processFiles === null) {
  processFiles = new java.util.ArrayList();
}

//// == Calculating / 演算 ==
/// File Name (from URI Path with Regular Expression)
let fileName = "";
if( saveAs === "" ){
  throw "Downloaded File Name isn't set";
}else{
  fileName = saveAs;
}

/// Access to the URL
let httpRequest = httpClient.begin(); // HttpRequestWrapper
// com.questetra.bpms.core.event.scripttask.HttpClientWrapper
const response = httpRequest.get( fileUrl ); // HttpResponseWrapper
const httpStatus  = response.getStatusCode() + "";
const responseTxt = response.getResponseAsString();
if (httpStatus >= 300) {
  const error = "Failed to download \n STATUS:" + httpStatus + "\n" + responseTxt;
  throw error;
}
engine.log( "STATUS: " + httpStatus );
const qfile = new com.questetra.bpms.core.event.scripttask.NewQfile(
    fileName, response.getContentType(), response.getResponse()
  );

/// Error Handling
// (no action)


//// == Data Updating / ワークフローデータへの代入 ==
processFiles.add( qfile );
engine.setDataByNumber( dataIdB, processFiles );
]]></script>


<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADi0lEQVRYR8WXTUgUURzAf7NLq1GQ
Vhb0ZUGfErZZkIcoCSk6FCV0KXDdCmcPQXUp6rB+XCIttNNmJBYhQZfyEEEQbUXQIWEtsqAoKRSz
DruYGmZOvJlGd2ferLO51YNhF97//f+/997/6yn856FkZL+FfcB2NPwo5AH+3+tjaMRREL9RQnS4
1Ts1QBt5jHIcOAG6UTcjDjTj4xJBxH/HkR4gQhUemjIwbDUkjAdRueNE4AxwmWYUfefZGM2onJQp
kgO0cA0IZMPyhA6Na4QIWnXaAbK781R7GpcI6b40MVIBjDtvy+rO7cr2J/vEJIDh7R+m4XBuueP4
WGFGxyRAC7VAjZOWxi2NVK6upGBmgS7SM9hDY1cjke6IW8PJcnWouj2SAUTIzJFpa93eSmB1AK/i
TZkeGhuivrOehq6GTCHiqORPAhgZ7rZMy+6lu2kra2PhzIVSI33DfXwZ+cKy2cv4+O0jN97e4OKL
i26AdF8wTiCN54dLwpzdeJYcb44bpYyNj9H+rp2qaFV6+d8RYQC0ENVzvGTUb67ntP80Po/PFYAQ
+jzymWA0yL1P99KteYRKmQnQAxRapUsXlFK7uZYdi3YwwzMjZbp/uJ9zsXOULy5nT+GelLnR8VHO
x84Tfh5OBxBDZaMJoFkli/KKuFl+k+K5xVIlvUO9VD6s5ODKgxxZeyRFRkOjb6iPW+9vUfO8hsEf
g3IQFcURILI1QvW6ajyKJ2MAc4EAedD7gIr7FXKIJADbFXRWdFIyv0Rq/NnAM3be3Tmh9Iz/DOFN
YXK9uTb54bFh/SpskaHRRQi/oxO+OvCKovwiKcBP7Sftb9sJRAOIML2y7QpLZi1xvO/WN60cfXzU
Op/khJIw7NjVwd7CvY5KzSR0aNUhRz8Ri8e1cT1bHnt6LFWXJQxtiejwmsNcKL1Afo6esKRDxLzX
40VJSqhWwYGRAUJPQtzuseW5pERk5AJbKj614RTim5c7z3UOSBZMjCZoetlEXWeddX0C1WjvpixG
4m5FqK2fuz4jiK/fv3L19VW6492ydZJiZJRjEQ3SgpSR9fTCCXwst5djsei/NiQm9d9syWDi6E1z
/64pheuo2Erkv2rLbTtPfwLmrNGoiBb9Tx0zAVT92cPEhDCiQ7TS4nMLIgyLp1nz9J5m1nASJ6JR
hoIfjTwUNugiorAoxNGIoRBNt2Oryqkfp1lMADJVvwC8Hiswkyz4FwAAAABJRU5ErkJggg==
</icon>

</service-task-definition>
