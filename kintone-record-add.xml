<?xml version="1.0" encoding="UTF-8"?><service-task-definition>
<label>Kintone: Add New Record</label>
<label locale="ja">kintone: レコード追加</label>
<last-modified>2020-08-14</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>2</engine-type>
<summary>Add a new record to a Kintone App.</summary>
<summary locale="ja">kintone アプリにレコードを１件追加します。</summary>
<configs>
  <config name="conf_OAuth2" required="true" form-type="OAUTH2">
    <label>C1: OAuth2 Setting Name in which API Token is set</label>
    <label locale="ja">C1: API Token を設定した OAuth2 設定名</label>
  </config>
  <config name="conf_domain" required="true" form-type="TEXTFIELD">
    <label>C2: Domain (such as xxxxx.kintone.com or xxxxx.cybozu.com)</label>
    <label locale="ja">C2: ドメイン（xxxxx.kintone.com または xxxxx.cybozu.com）</label>
  </config>
  <config name="conf_guestSpaceId" required="false" form-type="TEXTFIELD">
    <label>C3: Guest Space ID (required if the App is in a Guest Space)</label>
    <label locale="ja">C3: ゲストスペース ID（ゲストスペース内のアプリの場合のみ）</label>
  </config>
  <config name="conf_appId" required="true" form-type="TEXTFIELD">
    <label>C4: App ID</label>
    <label locale="ja">C4: アプリ ID</label>
  </config>
  <config name="conf_fieldCode1" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C5F: Field Code 1</label>
    <label locale="ja">C5F: フィールドコード_1</label>
  </config>
  <config name="conf_fieldValue1" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C5V: Value 1</label>
    <label locale="ja">C5V: 値_1</label>
  </config>
    <config name="conf_fieldCode2" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C6F: Field Code 2</label>
    <label locale="ja">C6F: フィールドコード_2</label>
  </config>
  <config name="conf_fieldValue2" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C6V: Value 2</label>
    <label locale="ja">C6V: 値_2</label>
  </config>
    <config name="conf_fieldCode3" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C7F: Field Code 3</label>
    <label locale="ja">C7F: フィールドコード_3</label>
  </config>
  <config name="conf_fieldValue3" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C7V: Value 3</label>
    <label locale="ja">C7V: 値_3</label>
  </config>
    <config name="conf_fieldCode4" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C8F: Field Code 4</label>
    <label locale="ja">C8F: フィールドコード_4</label>
  </config>
  <config name="conf_fieldValue4" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C8V: Value 4</label>
    <label locale="ja">C8V: 値_4</label>
  </config>
    <config name="conf_fieldCode5" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C9F: Field Code 5</label>
    <label locale="ja">C9F: フィールドコード_5</label>
  </config>
  <config name="conf_fieldValue5" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C9V: Value 5</label>
    <label locale="ja">C9V: 値_5</label>
  </config>
    <config name="conf_fieldCode6" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C10F: Field Code 6</label>
    <label locale="ja">C10F: フィールドコード_6</label>
  </config>
  <config name="conf_fieldValue6" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C10V: Value 6</label>
    <label locale="ja">C10V: 値_6</label>
  </config>
    <config name="conf_fieldCode7" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C11F: Field Code 7</label>
    <label locale="ja">C11F: フィールドコード_7</label>
  </config>
  <config name="conf_fieldValue7" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C11V: Value 7</label>
    <label locale="ja">C11V: 値_7</label>
  </config>
    <config name="conf_fieldCode8" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C12F: Field Code 8</label>
    <label locale="ja">C12F: フィールドコード_8</label>
  </config>
  <config name="conf_fieldValue8" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C12V: Value 8</label>
    <label locale="ja">C12V: 値_8</label>
  </config>
</configs>
<help-page-url>https://support.questetra.com/addons/kintone-record-add/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/kintone-record-add/</help-page-url>


<script><![CDATA[

main();
function main(){
  //// == 工程コンフィグの参照 / Config Retrieving ==
  const oauth2 = configs.get("conf_OAuth2");
  const domain = configs.get("conf_domain");
  const guestSpaceId = configs.get("conf_guestSpaceId");
  const appId = configs.get("conf_appId");
  const recordObj = retrieveRecordContent();

  //// == ワークフローデータの参照 / Data Retrieving ==
  const apiToken = httpClient.getOAuth2Token( oauth2 );

  //// == 演算 / Calculating ==
  const apiUri = determineApiUri( domain, guestSpaceId );
  addRecord( apiUri, apiToken, appId, recordObj );

}

/**
  * configからレコード情報（フィールドコードとフィールドの値）を読み出し、JSON オブジェクトを返す
  * @return {Object} recordObj  レコード情報の JSON オブジェクト
  */
function retrieveRecordContent() {
  let recordObj = {};
  for (let i = 0; i < 8; i++) {
    const fieldCodeConfigName = `conf_fieldCode${i+1}`;
    const fieldValueConfigName = `conf_fieldValue${i+1}`;

    const fieldCode = configs.get( fieldCodeConfigName );
    if ( fieldCode === "" || fieldCode === null ) {
      continue;
    }

    const fieldValue = configs.get( fieldValueConfigName );
    const index = fieldCode.indexOf( "/" );
    if ( index > 0 ) { // テーブル内のフィールドの場合
      const tableFieldCode = fieldCode.substr( 0, index + 1 );
      const innerFieldCode = fieldCode.substr( index );
      let innerObj = {
        "value": {}
      };
      innerObj.value[innerFieldCode] = {
        "value": fieldValue
      }
      if ( recordObj[tableFieldCode] === undefined ) {
        recordObj[tableFieldCode] = {
          "value": [ innerObj ]
        }
      } else {
        recordObj[tableFieldCode].value.push( innerObj );
      }
    } else { // 通常のフィールドの場合
      recordObj[fieldCode] = {
        "value": fieldValue
      };
    }
  }
  engine.log( JSON.stringify(recordObj) ); // デバッグ用
  return recordObj;
}

/**
  * kintone REST API のレコード追加の URI を決定する
  * @param {String} domain  ドメイン
  * @param {String} guestSpaceId  ゲストスペース ID
  * @return {String} apiUri  API の URI
  */
function determineApiUri( domain, guestSpaceId ) {
  if ( domain === "" || domain === null ) {
    throw "Domain is empty.";
  }
  let apiUri = "";
  if ( guestSpaceId === "" || guestSpaceId === null ) {
    apiUri = `https://${domain}/k/v1/record.json`;
  } else {
    apiUri = `https://${domain}/k/guest/${guestSpaceId}/v1/record.json`;
  }
  return apiUri;
}

/**
  * kintone REST API にレコード追加の POST リクエストを送信する
  * @param {String} apiUri  API の URI
  * @param {String} apiToken  API トークン
  * @param {String} appID  アプリ ID
  * @param {Object} recordObj  レコード情報の JSON オブジェクト
  */
function addRecord( apiUri, apiToken, appId, recordObj ) {
  const body = {
    "app": appId,
    "record": recordObj
  };
  const response = httpClient.begin()
    .header( "X-Cybozu-API-Token", apiToken )
    .body(JSON.stringify(body), "application/json; charset=UTF-8")
    .post( apiUri );
  //when error thrown
  const responseJson = response.getResponseAsString();
  const status = response.getStatusCode();
  const accessLog = `---POST request--- ${status}\n${responseJson}\n`;
  engine.log(accessLog);
  if (status >= 300) {
    throw `Failed to add record. status: ${status}`;
  }
  return;
}

  ]]>
</script>


<icon><!-- 差し替え予定 -->
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAC9ElEQVRYR8WXTUhUURTHf/e9GfMr
8GthuUjIRZgFKkVgkBHoSLWJKArb2EZrYxAUrdqFEFQbdZObooigFlFaLgQh+iCUFomVVJaFQiZK
Y5Mz7514k89m5s28Nw7G3O39n3N+995zzr1XkeWh0o0vD8g3fBxCsVeEWqWoBIqX7edE+KQUowhD
eoR76iCL6fj2BJCHlEd0ziloB3LTcQqEBHp9Bl1qP9NuNq4ASwO0a3AZKEgzcKIsaMLZnAC9qexT
AhiP6RahI8PAcWZK0aM3cyqZr6QAkX5uoTi2FsFXfAi3fS0cT/TpAFjLlTuCJdmJOIDlM+9Z05Un
ODOhIzYnVgCsbDd0JrwSTm3qRJUfhl+TyOQ1ZP7lanmDukGVXR0rAOEBrijodPOm1Q+gyppjJII5
dhpVfhT8RciHS8j0HU8ggav+AGcsYRQg2mT8zLrW+boN6I3fPJ2bz+qQhVEvXUgPU2o1qyhApJ9W
FDccVgVb0Gr6UPmbQfnBbze+1P5l/gUyZdlUQU4ZmL8xJy7C0ky8kXDC18LNvwADXAfa4hT5Vei7
34LSvFbjQmNivr+AfOxKpunzBTgZBQj3M6IUtbEqbccQqqQx8+DhWYznu2DRymvnEGHU30KdvQM/
Yi6WqFrfMwW5FZkBhOcwhishsuBmP+cLUGIDSKJSq+9HlQUyA5AwxpMcT1tfAJUSQBU1oO0czjgH
zKdbkZ9jrhCxAI4jiNZoRRtajZWfqx/GYB6YofSOIFkSRgE2tqJtc1anF47MDmK+anKVJSahswwt
gMJqtIY3XvGW5wVCX5CZ+5jjrg3V9vevDFM2Iqsa9i2Ab70nhEzfxXx9xFO3IohtRG6tWJU2YVWE
oyGFPiPBcVRxIxIcwxw5AKGv6QLEt+JoM3K7jPIq0aq7UYXbITKPfH+E+e48iJFuwDid4zKyZtO9
jjOKGG+U/Dq2NFl9kNiQWX2S2RBZfZT+j51Y9bPchsjqx8SGyOrXLLZ6svY5XYO6d3XxB6jhMTC0
XFl3AAAAAElFTkSuQmCC
</icon>

</service-task-definition>
