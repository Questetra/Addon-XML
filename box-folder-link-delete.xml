<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<last-modified>2021-01-19</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>2</engine-type>
<label>Box: Delete Shared Link of Folder</label>
<label locale="ja">Box: フォルダ共有リンク削除</label>
<summary>Delete a Shared Link URL of the specified folder on Box. An error will occur if no shared link.</summary>
<summary locale="ja">Box 上の指定フォルダの共有リンク URL を削除します。共有リンクが無い場合は、エラーとなります。</summary>
<help-page-url>https://support.questetra.com/addons/box-folder-link-delete</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/box-folder-link-delete</help-page-url>
<configs>
  <config name="OAuth2" required="true" form-type="OAUTH2" oauth2-setting-name="https://app.box.com/api/oauth2/root_readwrite">
    <label>C1: OAuth2 Setting</label>
    <label locale="ja">C1: OAuth2 設定</label>
  </config>
  <config name="conf_FolderId" required="true" form-type="SELECT" select-data-type="STRING_TEXTFIELD" editable="true">
    <label>C2: Folder ID to delete Shared Link</label>
    <label locale="ja">C2: 共有リンクを削除するフォルダの ID </label>
  </config>
</configs>

<script><![CDATA[
main();
function main(){
  
  const oauth2 = configs.get("OAuth2");

  let folderId = decideFolderId();

  // フォルダに共有リンクがあるか調べる
  const existingUrl = getFolderInformation(oauth2, folderId);

  // フォルダに共有リンクが無い場合はエラーにする　共有リンクがある場合は削除する
  if (existingUrl === null){
    const error = `Failed to Delete Shared Link \n The folder(ID:${folderId}) doesn't have a Shared link.`;
    throw error;
   }
    deleteSharedLink(oauth2, folderId);
}

/**
  * フォルダのIDをconfigから読み出して出力する。
  * @return {String} folderId フォルダの ID
  */
function decideFolderId(){
  let folderId = "";
  const folderIdDef = configs.getObject("conf_FolderId");
  if(folderIdDef === null){
    folderId = configs.get( "conf_FolderId");
  }else{
    folderId = engine.findData(folderIdDef);
  }

  if (folderId === "" ||folderId === null) {
    throw "Folder ID is blank";
  }
  if(folderId === "0") {
    throw "Root folder is not eligible.";
  }
  return folderId;
}



/**
  * Get Folder Information on Box  フォルダに共有リンクがあるか調べる
  * @param {String} oauth2 認証設定
  * @param {String} folderId  調べたいフォルダのID
  * @return {Object}  jsonRes.shared_link フォルダの共有リンクオブジェクト
  */
function getFolderInformation(oauth2, folderId) {

  const url = "https://api.box.com/2.0/folders/" + folderId + "?fields=shared_link";
  const response = httpClient.begin()
    .authSetting(oauth2)
    .get(url);
  const status = response.getStatusCode();
  const responseTxt = response.getResponseAsString();
  if (status !== 200) {
    const error = `Failed to get folder information \n status: ${status}`;
    engine.log(responseTxt);
    throw error;
  }

  const jsonRes = JSON.parse(responseTxt);

  return jsonRes.shared_link;
}




/**
  * Delete Shared Link to Folder on Box  共有リンク削除
  * @param {String} OAuth2 認証設定
  * @param {String} folderId  共有リンクを削除したいフォルダのID
  */
function deleteSharedLink(oauth2, folderId) {

  let jsonBody = {};

  jsonBody["shared_link"] = null;
  
  const url = "https://api.box.com/2.0/folders/" + folderId + "?fields=shared_link";
  const response = httpClient.begin()
    .authSetting(oauth2)
    .body(JSON.stringify(jsonBody), "application/json; charset=UTF-8")
    .put(url);
  const status = response.getStatusCode();
  const responseTxt = response.getResponseAsString();
  if (status !== 200) {
    const error = `Failed to delete \n status: ${status}`;
    engine.log(responseTxt);
    throw error;
  }
  engine.log(`status: ${status} Shared Link was deleted, forder ID: ${folderId}`);  
  }


]]></script>

<icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEBElEQVRYR82Xb2jbRRjHP/fL2jXJ
0qSd65x11aK0YgJWZUwEWZ0DfSNaHYKKmgykbP7pH/SVghvCkIlb6kREwfyGOougbgxB2Yt1oGwg
aietdOJoV21ty2ob26xdm+TkLsufJr+2Sdtt3pv8uDx3z+ee+z53zwmucRMF+ff/9ijEtwB1IDwI
9QtIOkGOA50I0UHIezTfeRcH8Pd64GITyGaE8OQ1sVQwIgiONsxqBTZvWxjA3+UHDuTtONuNBjEC
mLcfmY9gfgB/dxBBU14rXsxIyiCmr8XKzBog0GWCeG6xeQv6X2JiegPZY3IBVnLlOVtCG6a3ObN7
LoDacyFCBa2sUGMpGjI1kQbQao/0Lllw+YJoYTqrk9mRAdC9G8Eb+c6zLDvJHkzvbjVHGiDQpXLX
nZw4tOMGyp02Hjn457J8WQ5WUTB9ZWkAdcIJ+XWm8XCwFkexwLWrZ+UB9OmZ0EIiAhbKH2lLAKzZ
eaUAEhmRAAh0dYBQZ3yqKQDnaoPDp8PUVZXo/pM9EV75Ylh/77q/jO2bSlmz2mBgLErjoUHad95I
Z/80re0Jmw+e3UD1dcU8uP+8RRTlSUK++ssA3X3ATdkA61y2nIE/9k7Rd2GWx+4uxWZkAP8bo9Ru
YAho+XyIUruNNxsqiMzE8bxgEUV1gZneO5MAMtuTioACUM7e+W4Uj8Pg5W1rdV9cwvSsxPx+nNPn
LvLStnI2VdsZi8TwOGyMTsY0nNth493j/9DSPmSto5BXLAigsmDLW7388MeUnuDVh9ay74n1+vvI
zxM0vJfOkNGDtdiLDH7pn+beW+3a5kRPhK37rMJ/mScDIGcLBvfXsM61isrWs4xMxPSIpza7+ayx
Un8rbTz94UBqZX8fqNFp+82vkzTc5dL9n54K88xHaZu5YZBnCPnq5hXhqdequecWO2rPH3j7PBvc
qzjWVEXN9cV6HhVmJbwvf5rgcGMlT2526y1wldiYiUl9wKhtUHp4/8TYIiK0SMP6WgdfvbiRMqeN
yKU4NkNQUiToH51lcDyq4aIxtMjcdoOpGYkSkrJpOz6qt6OxvowLkzEqms7mAsjMNLQ4iNSIrbc5
2bu9QqdSNC7pHrjEjo8H+GssyifPV3JfjQNHscFQOMqeoyPsfXw9vw/P8HBbv3b4bWsVG8uL8L5+
zgIg8yBSf2cdxdayXaleGSbk0+Xd/+gyUtexiPRlXkgrtd4s9YeRzptzr2NldU0LkiTmlS3JUnVA
0t3VK0qRhwj5VJk/p12lsjxdAeUPoDWhCpW4KtFTlVJhwpRhpOFf2sMkpQn9NGtGyOb8QZRj/TQL
Lu9plr1c/TiV9QipHqUeEHckTOQZYBwpOkF0LLTiwragsHgvyfo/g3CBMFgjn40AAAAASUVORK5C
YII=</icon>
</service-task-definition>
