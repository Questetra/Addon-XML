<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
    <label>Microsoft Lists: Update List Item</label>
    <label locale="ja">Microsoft Lists: リストアイテム更新</label>
    <!--
    <last-modified>2024-04-11</last-modified>
    -->
    <license>(C) Questetra, Inc. (MIT License)</license>
    <engine-type>3</engine-type>
    <addon-version>2</addon-version>
    <summary>This item updates values of a list item on Microsoft Lists.</summary>
    <summary locale="ja">この工程は、Microsoft Lists のリストアイテム（1件）の内容を更新します。</summary>
    <configs>
        <config name="conf_OAuth2" required="true" form-type="OAUTH2" auth-type="OAUTH2"
                oauth2-setting-name="https://graph.microsoft.com/Sites.ReadWrite.All">
            <label>C1: OAuth2 Setting</label>
            <label locale="ja">C1: OAuth2 設定</label>
        </config>
        <config name="conf_SiteUrl" required="true" form-type="TEXTFIELD">
            <label>C2: SharePoint Site URL</label>
            <label locale="ja">C2: SharePoint サイトの URL</label>
        </config>
        <config name="conf_ListTitle" required="true" form-type="TEXTFIELD">
            <label>C3: List Title</label>
            <label locale="ja">C3: リストの名前</label>
        </config>
        <config name="conf_ListItemId" required="true" form-type="SELECT" select-data-type="STRING_TEXTFIELD|SELECT_SINGLE">
            <label>C4: List Item ID</label>
            <label locale="ja">C4: リストアイテム ID</label>
        </config>
        <config name="conf_ColumnName1" required="false" form-type="TEXTFIELD">
            <label>C-K1: Lists Field Name of Column 1</label>
            <label locale="ja">C-K1: 列 1 の Lists フィールド名</label>
        </config>
        <config name="conf_ColumnValue1" required="false" form-type="TEXTAREA" el-enabled="true">
            <label>C-V1: New Value of Column 1</label>
            <label locale="ja">C-V1: 列 1 の新しい値</label>
        </config>
        <config name="conf_ColumnName2" required="false" form-type="TEXTFIELD">
            <label>C-K2: Lists Field Name of Column 2</label>
            <label locale="ja">C-K2: 列 2 の Lists フィールド名</label>
        </config>
        <config name="conf_ColumnValue2" required="false" form-type="TEXTAREA" el-enabled="true">
            <label>C-V2: New Value of Column 2</label>
            <label locale="ja">C-V2: 列 2 の新しい値</label>
        </config>
        <config name="conf_ColumnName3" required="false" form-type="TEXTFIELD">
            <label>C-K3: Lists Field Name of Column 3</label>
            <label locale="ja">C-K3: 列 3 の Lists フィールド名</label>
        </config>
        <config name="conf_ColumnValue3" required="false" form-type="TEXTAREA" el-enabled="true">
            <label>C-V3: New Value of Column 3</label>
            <label locale="ja">C-V3: 列 3 の</label>
        </config>
        <config name="conf_ColumnName4" required="false" form-type="TEXTFIELD">
            <label>C-K4: Lists Field Name of Column 4</label>
            <label locale="ja">C-K4: 列 4 の Lists フィールド名</label>
        </config>
        <config name="conf_ColumnValue4" required="false" form-type="TEXTAREA" el-enabled="true">
            <label>C-V4: New Value of Column 4</label>
            <label locale="ja">C-V4: 列 4 の新しい値</label>
        </config>
        <config name="conf_ColumnName5" required="false" form-type="TEXTFIELD">
            <label>C-K5: Lists Field Name of Column 5</label>
            <label locale="ja">C-K5: 列 5 の Lists フィールド名</label>
        </config>
        <config name="conf_ColumnValue5" required="false" form-type="TEXTAREA" el-enabled="true">
            <label>C-V5: New Value of Column 5</label>
            <label locale="ja">C-V5: 列 5 の新しい値</label>
        </config>
        <config name="conf_ColumnName6" required="false" form-type="TEXTFIELD">
            <label>C-K6: Lists Field Name of Column 6</label>
            <label locale="ja">C-K6: 列 6 の Lists フィールド名</label>
        </config>
        <config name="conf_ColumnValue6" required="false" form-type="TEXTAREA" el-enabled="true">
            <label>C-V6: New Value of Column 6</label>
            <label locale="ja">C-V6: 列 6 の新しい値</label>
        </config>
        <config name="conf_ColumnName7" required="false" form-type="TEXTFIELD">
            <label>C-K7: Lists Field Name of Column 7</label>
            <label locale="ja">C-K7: 列 7 の Lists フィールド名</label>
        </config>
        <config name="conf_ColumnValue7" required="false" form-type="TEXTAREA" el-enabled="true">
            <label>C-V7: New Value of Column 7</label>
            <label locale="ja">C-V7: 列 7 の新しい値</label>
        </config>
    </configs>
    <help-page-url>https://support.questetra.com/bpmn-icons/service-task-microsoft-lists-listitem-update/</help-page-url>
    <help-page-url locale="ja">https://support.questetra.com/ja/bpmn-icons/service-task-microsoft-lists-listitem-update/</help-page-url>


    <script><![CDATA[
// OAuth2 config sample at [OAuth 2.0 Setting]
// - Authorization Endpoint URL: https://login.microsoftonline.com/{your-tenant-id}/oauth2/v2.0/authorize
// - Token Endpoint URL: https://login.microsoftonline.com/{your-tenant-id}/oauth2/v2.0/token
// - Scope: https://graph.microsoft.com/Sites.ReadWrite.All offline_access
// - Consumer Key: (Get by Microsoft Azure Active Directory)
// - Consumer Secret: (Get by Microsoft Azure Active Directory)

const GRAPH_URI = 'https://graph.microsoft.com/v1.0/';

const COLUMN_NUM = 7; // 扱える列の数

const main = () => {
    //// == 工程コンフィグの参照 / Config Retrieving ==
    const oauth2 = configs.getObject('conf_OAuth2');
    const siteUrl = retrieveSiteUrl();
    const listTitle = configs.get('conf_ListTitle');
    const listItemId = retrieveListItemId();
    const fields = retrieveFields();

    //// == 演算 / Calculating ==
    const siteId = getSiteIdByUrl(oauth2, siteUrl);
    updateListItemFields(oauth2, siteId, listTitle, listItemId, fields);
};

/**
 * 工程コンフィグからサイトの URL を取得する
 * @returns {String} サイトの URL
 */
const retrieveSiteUrl = () => {
    let siteUrl = configs.get('conf_SiteUrl');
    // 末尾にスラッシュがある場合、削除
    if (siteUrl.endsWith('/')) {
        siteUrl = siteUrl.slice(0, -1);
    }
    return siteUrl;
};

/**
 * 工程コンフィグからリストアイテム ID を取得する
 * @returns {String} リストアイテム ID
 */
const retrieveListItemId = () => {
    const dataDef = configs.getObject('conf_ListItemId');
    if (dataDef.matchDataType('SELECT_SINGLE')) { // 選択型データ項目の場合
        const select = engine.findData(dataDef);
        if (select === null || select.size() === 0) { // 未選択
            throw new Error('List Item ID is not selected.');
        }
        return select.get(0).getValue();
    }
    // 文字型データ項目の場合
    const value = engine.findData(dataDef);
    if (value === null) {
        throw new Error('List Item ID is blank.');
    }
    return value;
};

/**
 * 工程コンフィグから更新する列の情報を取得する
 * @returns {Object} fields
 */
const retrieveFields = () => {
    const fields = {};
    for (let i = 0; i < COLUMN_NUM; i++) {
        const columnName = configs.get(`conf_ColumnName${i + 1}`);
        let columnValue = configs.get(`conf_ColumnValue${i + 1}`);
        if (columnName === '') {
            if (columnValue === '') { // 列名と値がともに空の組は無視
                continue
            }
            throw new Error(`C-V${i+1} is set while C-K${i+1} is blank.`);
        }
        if (fields[columnName] !== undefined) { // 列名の指定が重複
            throw new Error(`The field name "${columnName}" is set multiple times.`);
        }
        if (columnValue === '') {
            columnValue = null;
        }
        fields[columnName] = columnValue;
    }
    // フィールドが一つも指定されていない場合、エラー
    if (Object.keys(fields).length === 0) {
        throw new Error('No field to update is set.');
    }
    return fields;
};

/**
 * サイトのメタデータを取得し、siteId を返す
 * APIの仕様: https://docs.microsoft.com/ja-jp/onedrive/developer/rest-api/api/shares_get?view=odsp-graph-online
 * @param {AuthSettingWrapper} oauth2  OAuth2 設定情報
 * @param {String} siteUrl  SharePoint サイトの URL
 * @returns {String} siteId
 */
const getSiteIdByUrl = (oauth2, siteUrl) => {
    // encoding sharing URL
    const encodedSharingUrl = encodeSharingUrl(siteUrl);

    // preparing for API Request
    const response = httpClient.begin()
        .authSetting(oauth2)
        .queryParam('select', 'id')
        .get(`${GRAPH_URI}shares/${encodedSharingUrl}/site`);
    const status = response.getStatusCode();
    const responseStr = response.getResponseAsString();
    if (status !== 200) {
        engine.log(responseStr);
        throw new Error(`Failed to get site info. status: ${status}`);
    }
    return JSON.parse(responseStr).id;
};

/**
 * 共有URLを unpadded base64url 形式にエンコードする
 * @param {String} sharingUrl  共有URL
 * @returns {String} encodedSharingUrl  エンコードされた共有URL
 */
const encodeSharingUrl = (sharingUrl) => {
    let encodedSharingUrl = base64.encodeToUrlSafeString(sharingUrl);
    while (encodedSharingUrl.slice(-1) === '=') {
        encodedSharingUrl = encodedSharingUrl.slice(0, -1);
    }
    return `u!${encodedSharingUrl}`;
};

/**
 * リストアイテムのフィールドの値を更新する
 * @param {AuthSettingWrapper} oauth2  OAuth2 設定情報
 * @param {String} siteId  SharePoint サイトの ID
 * @param {String} listTitle  リストの名前
 * @param {String} listItemId  リストアイテム ID
 * @param {Array<String>} columnNames  列の名前
 * @returns {Object} 取得したリストアイテム
 */
const updateListItemFields = (oauth2, siteId, listTitle, listItemId, fields) => {
    const url = `${GRAPH_URI}sites/${encodeURIComponent(siteId)}/lists/${encodeURIComponent(listTitle)}/items/${encodeURIComponent(listItemId)}/fields`;
    engine.log(JSON.stringify(fields)); // テスト用
    const response = httpClient.begin()
        .authSetting(oauth2)
        .body(JSON.stringify(fields), 'application/json; charset=UTF-8')
        .patch(url);
    const status = response.getStatusCode();
    const responseStr = response.getResponseAsString();
    if (status !== 200) {
        engine.log(responseStr);
        throw new Error(`Failed to update fields of list item. status: ${status}`);
    }
    const listItem = JSON.parse(responseStr);
    return listItem;
};

    ]]></script>

    <icon>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAABFlJREFUWEfF
        l3tsU3UUx7/nrqVlbPiAZbjhhhLCdAYXxKBolKi49VZ0+KiKYbgIoa1mwbJuREKCJurWLghlrh1O
        EFgwARPjY+0GkqB/CD7+mDMb8lhSjchkKDKY69b1HtLbdbCtt/dmML1/3dyex+c8fud3SvifH9Lq
        v6Fw881hXeRxgJcw406AbiHiDFmfcZaBLoDaCTigj6R8tarF8bcW26oAHz5Znd4fEd4C82tEpNNi
        lJkHAfIMsuHNskBZTzIdRQAGk090rwShCqBMLY5HyzBzF0GosPrXNRKIE9lQBKgT3U4CqkFQzVJS
        OAYzwWFvcm7RBLDvuX0p53qDO4ioZDxRK+kwsGV6am65Zb8lcrXMmOjqzO61BLx3PZ3HbTHw+uhM
        jADwiTVLJJKaCSRMDABLBEG0NZW3xO0PA+xcvMkYmpIaTNZwt86fhQfXPAqQelv8e74Xn1V+PDYO
        xpm+8ymzHUccfdEfhy15Rdd6EL2rFHnOgttQuKEY39QewO+tv8piUkQCS1eam4SYOSLC895S7Hyh
        NqG5q0sha0SPnFd0/0FEMxJpxJ0frPoCwe9OaapOyW4bdpd4E8syzlj95dnRoykD1Jmq7yNBOJJI
        OnteDpa+bcHJwx043fabJudRoUWrH8EOi0dRniXpfnug8mgMwOyuIqAykXTRxmLcNHMaLp7tgaAT
        kJmXhdM/jQRhSQIJI/t2ZkEuthdvVgYAqu1NzvUxANF1mIgeTiRt2rgMnd+ewIlD7TBOnYxnt65A
        Y+l21Uy8vPdVfLT8fWUA5q/t/orFcYBfiGjufwxw3O6vyJMBvKLrHxDdoASQNS8H4dAAhBQBxvTJ
        6L8UUs2AIc0I39IaZTnmCzZ/xY1DGXCHiGBQAgj+0IljzW1Iy0hHsetFTSVYscuKPSt9mgGCRMjV
        BrAcjaX1qhlQA2DmKyWoE91HibBQCUCfOgndJ7swKc2IOQ/lod3fqgqQby5AwzNbtTWhV3T7QFij
        BGBIN+Kv4DnojXrc/sAcHD/UkRQg77F89F/qVx5EselXb/M7rXIP+ERXERMFtJ2CkqQlKNzwFGbc
        kY29qxsQ7htQBCVmk9Vf0SwDeEweg55CfyY6CdE5EPy+E8da2lTnQHRoZc7NUnXOjJ7pU3ozLPs3
        DQxfRkrT8O6n78V8y0JEwhH5ktEZdAiHwrHIovdQ1AID0YtooLcfn6zdkzTyITV5CkbfhwE8Js9U
        HYVOEVFs052gh5m7DTqe/crnlRdHAMgDyVxTyJD8E7mQCCwUWf3lB+Pxjdks1PaCa0mM6koWN+4V
        XR+AaNW1OBujO3TsRn9X3K28pup1IMF9PdZyMMpsAWfC9Sjpcud9wr0MjG0AsseVDeYgBHLYvnR+
        qqSvul3W31OvlzIvvARQGYAC1YywfDhbQVw7LXXWrtH/AzSXIBGxx/ROhp50ZgYWALiLiPKH5kEH
        g38m4McwDzaVBd7o1pox1QxoNTReucsdycEwUqG3yAAAAABJRU5ErkJggg==
    </icon>

    <test><![CDATA[


]]></test>

</service-task-definition>
