<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
    <last-modified>2022-07-08</last-modified>
    <license>(C) Questetra, Inc. (MIT License)</license>
    <engine-type>2</engine-type>
    <label>Stripe: Create Customer</label>
    <label locale="ja">Stripe: 顧客を作成</label>

    <help-page-url>https://support.questetra.com/bpmn-icons/service-task-stripe-customer-create/</help-page-url>
    <help-page-url locale="ja">https://support.questetra.com/ja/bpmn-icons/service-task-stripe-customer-create/
    </help-page-url>

    <summary>This item creates a customer object on Stripe.</summary>
    <summary locale="ja">この工程は、Stripe 上に顧客オブジェクトを作成します。</summary>

    <configs>
        <config name="conf_Auth" required="true" form-type="OAUTH2">
            <label>C1: Authorization Setting in which API Secret Key is set</label>
            <label locale="ja">C1: API シークレットキーを設定した認証設定</label>
        </config>
        <config name="conf_Name" required="true" el-enabled="true" form-type="TEXTFIELD">
            <label>C2: Customer Name</label>
            <label locale="ja">C2: 顧客の名前</label>
        </config>
        <config name="conf_Language" required="true" form-type="SELECT_ITEM">
            <label>C3: Language of invoice</label>
            <label locale="ja">C3: 請求書の言語</label>
            <item value="en-US">
                <label>English</label>
                <label locale="ja">英語</label>
            </item>
            <item value="ja-JP">
                <label>Japanese</label>
                <label locale="ja">日本語</label>
            </item>
        </config>
        <config name="conf_Email" required="false" el-enabled="true" form-type="TEXTFIELD">
            <label>C4: Customer Email Address</label>
            <label locale="ja">C4: 顧客のメールアドレス</label>
        </config>
        <config name="conf_Description" required="false" el-enabled="true" form-type="TEXTFIELD">
            <label>C5: Customer Description (Displayed in the dashboard)</label>
            <label locale="ja">C5: 顧客の説明（ダッシュボードに表示されます）</label>
        </config>
        <config name="conf_CustomerId" required="false" form-type="SELECT" select-data-type="STRING_TEXTFIELD">
            <label>C6: Data item to save ID of the customer</label>
            <label locale="ja">C6: 顧客の ID を保存するデータ項目</label>
        </config>
        <config name="conf_CustomerUrl" required="false" form-type="SELECT" select-data-type="STRING_TEXTFIELD">
            <label>C7: Data item to save URL of the customer</label>
            <label locale="ja">C7: 顧客の URL を保存するデータ項目</label>
        </config>
    </configs>

    <script><![CDATA[// GraalJS Script (engine type: 2)

main();

function main(){
    //// == Config Retrieving / 工程コンフィグの参照 ==
    const auth = configs.get('conf_Auth');
    const name = retrieveConfig('conf_Name', 'Customer Name', true, 256);
    const language = configs.get('conf_Language');
    const email = retrieveConfig('conf_Email', 'Customer Email', false, 512);
    const description = retrieveConfig('conf_Description', 'Customer Description', false, 350);
    const customerIdDef = configs.getObject('conf_CustomerId');
    const customerUrlDef = configs.getObject('conf_CustomerUrl');

    //// == Calculating / 演算 ==
    const customerId = createCustomer(auth, name, language, email, description);

    //// == Data Updating / ワークフローデータへの代入 ==
    if (customerIdDef !== null) {
        engine.setData(customerIdDef, customerId);
    }
    if (customerUrlDef !== null) {
        engine.setData(customerUrlDef, `https://dashboard.stripe.com/customers/${customerId}`);
    }
}

/**
  * config から設定値を読み出す。以下の場合はエラー
  * - required が true で、空文字列の場合
  * - 長さが maxLength を超える場合
  * @param {String} confName config 名
  * @param {String} label エラー出力用ラベル
  * @param {boolean} required 必須項目かどうか
  * @param {Number} maxLength 最大文字数
  * @return {String} value 設定値
  */
function retrieveConfig(confName, label, required, maxLength) {
    const value = configs.get(confName);
    if (required && value === '') {
        throw `${label} is blank.`;
    }
    if (value.length > maxLength) {
        throw `${label} must be at most ${maxLength} characters.`;
    }
    return value;
}

/**
  * 顧客を作成する
  * @param {String} oauth 認証設定
  * @param {String} name 名前
  * @param {String} language 言語
  * @param {String} email メールアドレス
  * @param {String} description 説明
  * @return {String} customerId 顧客 ID
  */
function createCustomer(auth, name, language, email, description) {
    const apiUri = 'https://api.stripe.com/v1/customers';
    const response = httpClient.begin()
        .authSetting(auth) // with "Authorization: Bearer XX"
        .formParam('name', name)
        .formParam('preferred_locales[0]', language)
        .formParam('email', email)
        .formParam('description', description)
        .post(apiUri);
    const status = response.getStatusCode();
    const responseStr = response.getResponseAsString();
    if (status !== 200) {
        engine.log(responseStr);
        throw `Failed to create customer. status: ${status}`;
    }
    const customerObj = JSON.parse(responseStr);
    return customerObj.id;
}

    ]]></script>

    <icon>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADaUlEQVRYR8WXSUwTYRTH/x9bS8tS
        KCWIbLFElkgiICQdw2I0xujB6MGo0cRojOBJEy0HLyQmJlQDnoSLXDQYLibGNUoili0sAoKGICAE
        LLKWRVpKW+YzHWiBtpQpYGau897//ea9973vDYHAD+EbP7O4TSKRLp0llBwBRToIEgCErfrPgGII
        BB2U0M9Gg+jl1+JDRj7aWwLka1qiWGotAkEBADEfUQAmUFT4EL+SWnX2mCcfjwA5JU0FhNBHAKQ8
        AzubGSgld+qKVBWb+W8KkKdpekJBC7cZeIMbASn/olbddKflFiBH01hFgAu7EdyuQYEXdWrmorOm
        C8BufrlrMNdMbABYrXn5bn65sxalpHB9TzgAuG6HtX8HDceX2+ADv0T76XAA5JY0loHgFl+VHdlR
        PNYWMbdtGhyAbchIJeZpL875juLb5oTBGCC3DSsOIOdhwyVCyTNvVRXBAYgKEaFb99dbV1BCL9fd
        PfycA8jVND4FcNWTSt5+OaQiX7zrnnCY3T+dhMz4UJR++oWanilvISq1aubaCkBJYzsI0p0VVPvC
        IAnwhb8fwY3ceOhmTahq1sHf1weWZRaRISLEhYtR3zeDYLEfDGYrWBZoH55DgjwQSoUUA5MGDE0v
        usJRdGiLmAx7BvTrLhbO+N6pRBxLicCihcX0ghmx4YEwmZfRN2FAWkwILFYWUwtmyCT+6ByZh0oZ
        BpalsCxTvP8+gaMpEfAhgMnCQvNhAM2Ds84QM1o1E24HoM5vH5xJhkop48Tr+vS4nhOHnj8LGJtf
        wvFUBapbR5EaHYTkqCDOJitBhtahWWQlhGJYb0K8PBDD04uIlolR3TaKyvoRlyxo1QzZFCAjLhTn
        s6M5wYb+Ga7WvWMLGJ1bAahq0eFAdDBS9qwBdI7M4WBsKAanjFAqJOj6PQ+90QLtTz1qe22HbOOz
        HsClBKXnUrmgS1YWr7+NIz9JjoigAK6ee2ViFwBGubIazC9a8aZrHCfTIrnyGM3LKKsZxMcfkx5K
        sEkT8m1r9QmlIyvuUu1Wx6kJtzyGnmCuMDFgEsPxtmscrzrH+XKvHcPtDiK+kdzZbRhEgo/i1WEk
        3GVkAxD8OuYupZUlVJiFxN4ogq5kdghBl9L/kQmv13JHJoT8MbFDCPprtn6CCfZzupNxy8f3Hyxn
        oTBfuPFrAAAAAElFTkSuQmCC
    </icon>

</service-task-definition>
