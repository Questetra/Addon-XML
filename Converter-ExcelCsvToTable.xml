<?xml version="1.0" encoding="UTF-8"?><service-task-definition>

<label>Converter (Excel-CSV FILE to Table)</label>
<label locale="ja">コンバータ (Excel-CSV FILE to Table)</label>

<last-modified>2019-09-28</last-modified>
<help-page-url>https://support.questetra.com/addons/converter-excelcsvfiletotable/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/excelcsvfiletotable/</help-page-url>

<configs>
  <config name="conf_DataIdA" required="true" form-type="SELECT" select-data-type="FILE">
    <label>A: Select Excel-CSV FILE DATA</label>
    <label locale="ja">A: Excel-CSVデータが格納されているファイル型データ項目を選択してください</label>
  </config>
  <config name="conf_DataIdB" required="true" form-type="SELECT" select-data-type="LIST">
    <label>B: Select TABLE DATA (update)</label>
    <label locale="ja">B: テーブル型データ項目を選択してください（更新）</label>
  </config>
</configs>


<script><![CDATA[
//// == 自動工程コンフィグの参照 / Config Retrieving ==
var dataIdA = configs.get( "conf_DataIdA" ); // (returns Number)
var dataIdB = configs.get( "conf_DataIdB" ); // (returns Number)

//// == ワークフローデータの参照 / Data Retrieving ==
var myFiles = engine.findDataByNumber( dataIdA ); 
// java.util.ArrayList
if (myFiles === null || myFiles.size() != 1) {
  throw new Error( 'Attachment of multiple files can not be supported.' );
}

//// == Calculating / 演算 ==
// ファイル型を1行ずつ読み込んで、テーブル型にセット
var myTable = new com.questetra.bpms.core.model.formdata.ListArray();
fileRepository.readFile(myFiles.get(0), "x-UTF-16LE-BOM", function(line) {
  var tmpRow = new com.questetra.bpms.core.model.formdata.ListArray.ListRow();
  var cellsArray = line.split("\t");
  for (var j=0; j < cellsArray.length; j++){
    tmpRow.addCol( cellsArray[j] );
  }
  myTable.addRow( tmpRow );
  
});
// com.questetra.bpms.core.event.scripttask.FileRepositoryWrapper


//// == ワークフローデータへの代入 / Data Updating ==
engine.setDataByNumber( dataIdB, myTable );

]]></script>


<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACx0lEQVRYR8WXz0sUYRjHP5O0CLX+
uHTIQ7sHIby0BdIh0EU6hwmd20Vx9mb9AUvlQQSRVhBq0WW3gxcFKzx4000kBKO2QNgSssgS6uDu
oQQJJt4ZZ3ecH+s4O+kLyy7s+z7fz/PM87zPMxKnvKRj6afpBbpRiCDRAkQOzhdQKCEhvvMkeOnW
7tEAWVrYZwi4B6qom1UCUgSYII747bhqAzwhxhkeH0PYLCTE48i8cCJwBnhKCkn13I+VQua+nSF7
gDQ54K4fyhUbCjkSxM02rQD+en5YT2GChJpLlXUYQHvmWV89txq7bcyJKoCW7Vt1JJxb7hIBwnp1
VAHSPAQeuLVSa99U1xTzW/Msflt02vYIWdXDCCBKptkPgI07GzQFmhhcGXSCKCHTWgXQbrjnRvGe
iz20nWvzxJO8lqS9uZ3t39u1INRc0CJgk/nCi47WDk8AxkOOEAcVoQGkyat3vGH5BbD3d4/RwijD
b4fNzrxCJqoDfAEuGXdMd03TeaHTUwRC50NqDgjx8Q/jJN8k7ewUkLmqAyielBwOieiFg+Fa4tpJ
GelIgODZIJnuDDt/dhh67a41rN5aZfnHspPnVWwDgOURiF1CPBvN0hvqJfcxx8DKgH+BUnhPgohj
EhrFG6QG1n6usVne9ASw9H2J3CfR3w4tQxLalOHszVn6wn0I8XpXppixRs9UhpaLaPLGJP2X+2ls
aKxXH1sAMFxE2l1guYqNEHOf51j4uuAJplgqsv5r3Xi2jKyNd0c2Ix1iZnPGzyS0aUZaOxbVYGlI
Y9fH2N3fZeTdiKcImA6VCRCytmOx61QHEh3zf45kUAm9LndyQyk8QyZmfoYnNZZbPK8dAf1fbVAR
V5jXSakMxLy9mOgQWnWIUVp83IIIYfFqlqrv1cz8wEREFKJIRFBoQeKKukU0FokSCgUk8rU8dp8D
flS8Cxv/AFp57iGwqv7bAAAAAElFTkSuQmCC
</icon>

</service-task-definition>
