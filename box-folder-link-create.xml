<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<last-modified>2019-08-05</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>1</engine-type>
<label>Box: Create URL to Download (Folder)</label>
<label locale="ja">Box: 公開 ダウンロード URL 作成(フォルダ)</label>
<summary>Create a URL to download the specified folder on Box</summary>
<summary locale="ja">Box の指定フォルダのダウンロード URL を作成します</summary>
<help-page-url>https://support.questetra.com/addons/box-folder-link-create</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/box-folder-link-create</help-page-url>
<configs>
  <config name="OAuth2" required="true" form-type="OAUTH2">
    <label>C1: OAuth2 Setting Name</label>
    <label locale="ja">C1: OAuth2 設定名</label>
  </config>
  <config name="FolderId" required="true" el-enabled="true">
    <label>C2: Folder ID</label>
    <label locale="ja">C2: 公開するフォルダ ID</label>
  </config>
  <config name="unsharedAt" form-type="SELECT" select-data-type="DATE">
    <label>C3: Data Item with Download Limit Date-time</label>
    <label locale="ja">C3: ダウンロード期限が格納されている日付型データ項目</label>
  </config>
  <config name="DownloadPass" form-type="SELECT" select-data-type="STRING">
    <label>C4: Data Item with Download Password</label>
    <label locale="ja">C4: ダウンロードパスワードが格納されている文字型データ項目</label>
  </config>
  <config name="DownloadUrlItem" form-type="SELECT" select-data-type="STRING" required="true">
    <label>C5: Data Item that will save web view url of Folder</label>
    <label locale="ja">C5: 作成した URL を保存するデータ項目</label>
  </config>
</configs>

<script><![CDATA[
main();
function main(){
  const folderId = configs.get("FolderId");
  if (folderId == "" ||folderId == null) {
    throw "Folder ID is blank";
  }
  const dateItem = configs.get("unsharedAt");
  const passwordItem = configs.get("DownloadPass");
  let unsharedDate = null;
  if (dateItem !== "" && dateItem !== null){
    unsharedDate = engine.findDataByNumber(dateItem);
  }
  let password = "";
  if (passwordItem !== "" && passwordItem !== null){
    password = engine.findDataByNumber(passwordItem);
  }
  // get OAuth token
  let token;
  token = httpClient.getOAuth2Token(configs.get("OAuth2"));
  
  let jsonRes = {};

  jsonRes["shared_link"] = {"access": "open"};
  if(unsharedDate !== null){
    jsonRes["shared_link"]["unshared_at"] = unsharedDate.toString();
  }
  if(password !== "" && password !== null){
    jsonRes["shared_link"]["password"] = password;
  }
  
  jsonRes["shared_link"]["permissions"] = {"can_download": true };
  
  const url = "https://api.box.com/2.0/folders/" + folderId + "?fields=shared_link";
  const response = httpClient.begin()
    .bearer(token)
    .body(JSON.stringify(jsonRes), "application/json; charset=UTF-8")
    .put(url);
  const status = response.getStatusCode();
  const responseTxt = response.getResponseAsString();
  if (status >= 300) {
    const error = "Failed to create \n status:" + status + "\n" + responseTxt
    throw error;
  }
  engine.log("status:" + status);
  engine.log(responseTxt);
  
  
  jsonRes = JSON.parse(responseTxt);

  const UrlData = configs.get("DownloadUrlItem");
  if (UrlData !== null || UrlData !== "") {
      engine.setDataByNumber(UrlData,jsonRes["shared_link"]["url"] );
  }
}
]]></script>

<icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEBElEQVRYR82Xb2jbRRjHP/fL2jXJ
0qSd65x11aK0YgJWZUwEWZ0DfSNaHYKKmgykbP7pH/SVghvCkIlb6kREwfyGOougbgxB2Yt1oGwg
aietdOJoV21ty2ob26xdm+TkLsufJr+2Sdtt3pv8uDx3z+ee+z53zwmucRMF+ff/9ijEtwB1IDwI
9QtIOkGOA50I0UHIezTfeRcH8Pd64GITyGaE8OQ1sVQwIgiONsxqBTZvWxjA3+UHDuTtONuNBjEC
mLcfmY9gfgB/dxBBU14rXsxIyiCmr8XKzBog0GWCeG6xeQv6X2JiegPZY3IBVnLlOVtCG6a3ObN7
LoDacyFCBa2sUGMpGjI1kQbQao/0Lllw+YJoYTqrk9mRAdC9G8Eb+c6zLDvJHkzvbjVHGiDQpXLX
nZw4tOMGyp02Hjn457J8WQ5WUTB9ZWkAdcIJ+XWm8XCwFkexwLWrZ+UB9OmZ0EIiAhbKH2lLAKzZ
eaUAEhmRAAh0dYBQZ3yqKQDnaoPDp8PUVZXo/pM9EV75Ylh/77q/jO2bSlmz2mBgLErjoUHad95I
Z/80re0Jmw+e3UD1dcU8uP+8RRTlSUK++ssA3X3ATdkA61y2nIE/9k7Rd2GWx+4uxWZkAP8bo9Ru
YAho+XyIUruNNxsqiMzE8bxgEUV1gZneO5MAMtuTioACUM7e+W4Uj8Pg5W1rdV9cwvSsxPx+nNPn
LvLStnI2VdsZi8TwOGyMTsY0nNth493j/9DSPmSto5BXLAigsmDLW7388MeUnuDVh9ay74n1+vvI
zxM0vJfOkNGDtdiLDH7pn+beW+3a5kRPhK37rMJ/mScDIGcLBvfXsM61isrWs4xMxPSIpza7+ayx
Un8rbTz94UBqZX8fqNFp+82vkzTc5dL9n54K88xHaZu5YZBnCPnq5hXhqdequecWO2rPH3j7PBvc
qzjWVEXN9cV6HhVmJbwvf5rgcGMlT2526y1wldiYiUl9wKhtUHp4/8TYIiK0SMP6WgdfvbiRMqeN
yKU4NkNQUiToH51lcDyq4aIxtMjcdoOpGYkSkrJpOz6qt6OxvowLkzEqms7mAsjMNLQ4iNSIrbc5
2bu9QqdSNC7pHrjEjo8H+GssyifPV3JfjQNHscFQOMqeoyPsfXw9vw/P8HBbv3b4bWsVG8uL8L5+
zgIg8yBSf2cdxdayXaleGSbk0+Xd/+gyUtexiPRlXkgrtd4s9YeRzptzr2NldU0LkiTmlS3JUnVA
0t3VK0qRhwj5VJk/p12lsjxdAeUPoDWhCpW4KtFTlVJhwpRhpOFf2sMkpQn9NGtGyOb8QZRj/TQL
Lu9plr1c/TiV9QipHqUeEHckTOQZYBwpOkF0LLTiwragsHgvyfo/g3CBMFgjn40AAAAASUVORK5C
YII=</icon>
</service-task-definition>