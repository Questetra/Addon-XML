<?xml version="1.0" encoding="UTF-8"?><service-task-definition>
<label>Google BigQuery: Insert New Data</label>
<label locale="ja">Google BigQuery: データ追加</label>
<last-modified>2021-07-19</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>2</engine-type>
<summary>Insert a new data row to a table on BigQuery.</summary>
<summary locale="ja">BigQuery のテーブルにデータを１行追加します。</summary>
<configs>
  <config name="conf_auth" required="true" form-type="OAUTH2" oauth2-setting-name="https://www.googleapis.com/auth/bigquery">
    <label>C1: OAuth2 Setting</label>
    <label locale="ja">C1: OAuth2 設定</label>
  </config>
  <config name="conf_projectId" required="true" form-type="TEXTFIELD">
    <label>C2: Project ID</label>
    <label locale="ja">C2: プロジェクト ID</label>
  </config>
  <config name="conf_datasetId" required="true" form-type="TEXTFIELD">
    <label>C3: Dataset ID</label>
    <label locale="ja">C3: データセット ID</label>
  </config>
  <config name="conf_tableId" required="true" form-type="TEXTFIELD">
    <label>C4: Table ID</label>
    <label locale="ja">C4: テーブル ID</label>
  </config>
  <config name="conf_templateSuffix" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C5: Template Suffix (required if the table is a base template)</label>
    <label locale="ja">C5: テンプレートサフィックス（テンプレートテーブルの場合のみ）</label>
  </config>
  <config name="conf_field1" required="false" form-type="TEXTFIELD">
    <label>C6F: Field 1</label>
    <label locale="ja">C6F: フィールド_1</label>
  </config>
  <config name="conf_value1" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C6V: Value 1</label>
    <label locale="ja">C6V: 値_1</label>
  </config>
  <config name="conf_field2" required="false" form-type="TEXTFIELD">
    <label>C7F: Field 2</label>
    <label locale="ja">C7F: フィールド_2</label>
  </config>
  <config name="conf_value2" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C7V: Value 2</label>
    <label locale="ja">C7V: 値_2</label>
  </config>
  <config name="conf_field3" required="false" form-type="TEXTFIELD">
    <label>C8F: Field 3</label>
    <label locale="ja">C8F: フィールド_3</label>
  </config>
  <config name="conf_value3" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C8V: Value 3</label>
    <label locale="ja">C8V: 値_3</label>
  </config>
  <config name="conf_field4" required="false" form-type="TEXTFIELD">
    <label>C9F: Field 4</label>
    <label locale="ja">C9F: フィールド_4</label>
  </config>
  <config name="conf_value4" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C9V: Value 4</label>
    <label locale="ja">C9V: 値_4</label>
  </config>
  <config name="conf_field5" required="false" form-type="TEXTFIELD">
    <label>C10F: Field 5</label>
    <label locale="ja">C10F: フィールド_5</label>
  </config>
  <config name="conf_value5" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C10V: Value 5</label>
    <label locale="ja">C10V: 値_5</label>
  </config>
  <config name="conf_field6" required="false" form-type="TEXTFIELD">
    <label>C11F: Field 6</label>
    <label locale="ja">C11F: フィールド_6</label>
  </config>
  <config name="conf_value6" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C11V: Value 6</label>
    <label locale="ja">C11V: 値_6</label>
  </config>
  <config name="conf_field7" required="false" form-type="TEXTFIELD">
    <label>C12F: Field 7</label>
    <label locale="ja">C12F: フィールド_7</label>
  </config>
  <config name="conf_value7" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C12V: Value 7</label>
    <label locale="ja">C12V: 値_7</label>
  </config>
</configs>
<help-page-url>https://support.questetra.com/bpmn-icons/service-task-google-bigquery-data-insert/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/bpmn-icons/service-task-google-bigquery-data-insert/</help-page-url>

<script><![CDATA[

// OAuth2 config sample at [OAuth 2.0 Setting]
// - Authorization Endpoint URL: https://accounts.google.com/o/oauth2/auth?access_type=offline&approval_prompt=force
// - Token Endpoint URL: https://oauth2.googleapis.com/token
// - Scope: https://www.googleapis.com/auth/bigquery
// - Consumer Key: (Get by Google Developer Console)
// - Consumer Secret: (Get by Google Developer Console)

const FIELD_NUM = 7; // 扱えるフィールドの数

main();
function main(){
  //// == 工程コンフィグ・ワークフローデータの参照 / Config & Data Retrieving ==
  const oauth2 = configs.get("conf_auth");
  const projectId = configs.get("conf_projectId");
  const datasetId = configs.get("conf_datasetId");
  const tableId = configs.get("conf_tableId");
  const templateSuffix = configs.get("conf_templateSuffix");

  isValidProjectId( projectId );
  isValidDatasetId( datasetId );
  isValidTableId( `${tableId}${templateSuffix}` );

  const dataObj = retrieveDataObj();

  //// == 演算 / Calculating ==
  insertData( oauth2, projectId, datasetId, tableId, templateSuffix, dataObj );
}

/**
  * プロジェクト ID が不正な文字列であればエラー
  * @param {String} projectId  プロジェクト ID
  */
function isValidProjectId( projectId ) {
  const reg = new RegExp( '^[a-zA-Z][0-9a-zA-Z-]{4,28}[0-9a-zA-Z]$' );
  if ( !reg.test(projectId) ) {
    throw "Invalid Project ID.";
  }
}

/**
  * データセット ID が不正な文字列であればエラー
  * @param {String} datasetId  データセット ID
  */
function isValidDatasetId( datasetId ) {
  const reg = new RegExp( '^\\w{1,1024}$' );
  if ( !reg.test(datasetId) ) {
    throw "Invalid Dataset ID.";
  }
}

/**
  * テーブル ID （サフィックスを含む）が不正な文字列であればエラー
  * @param {String} tableId  テーブル ID
  */
function isValidTableId( tableId ) {
  if( encodeURIComponent(tableId).replace(/%../g,"x").length > 1024 ) {
    throw "Invalid Table ID and/or Template Suffix. Too long.";
  }
  const reg = new RegExp( '^[\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{Pd}\\p{Zs}]+$' , 'u');
  if ( !reg.test(tableId) ) {
    throw "Invalid Table ID and/or Template Suffix. Includes an invalid character.";
  }
}

/**
  * フィールドが不正な文字列であればエラー
  * @param {String} field  フィールド
  */
function isValidField( field ) {
  const reg = new RegExp( '^(?!_TABLE_|_FILE_|_PARTITION)[a-zA-Z_]\\w{0,299}$' );
  if ( !reg.test(field) ) {
    throw `Invalid Field Name: ${field}.`;
  }
}

/**
  * config からフィールドと値の組を読み出し、JSON オブジェクトを返す
  * @return {Object} dataObj  データオブジェクト
  */
function retrieveDataObj() {
  const dataObj = {};
  for (let i = 0; i < FIELD_NUM; i++) {
    const field = configs.get(`conf_field${i+1}`);
    let value = configs.get(`conf_value${i+1}`);
    if ( field === "" || field === null ) { // フィールドが空
      continue;
    }
    isValidField( field );
    if ( dataObj[field] !== undefined ) { // フィールドコードの指定が重複
      throw `The same field ${field} is set multiple times.`;
    }
    if ( value === "" || value === null ) { // 値が空
      value = null;
    }
    dataObj[field] = value;
  }
  return dataObj;
}

/**
  * データ追加の POST リクエストを送信する
  * @param {String} oauth  OAuth2 認証設定
  * @param {String} projectId  プロジェクト ID
  * @param {String} datasetId  データセット ID
  * @param {String} tableId  テーブル ID
  * @param {String} templateSuffix  テンプレートサフィックス
  * @param {Object} dataObj  データオブジェクト
  */
function insertData( oauth2, projectId, datasetId, tableId, templateSuffix, dataObj ) {
  const uri = `https://bigquery.googleapis.com/bigquery/v2/projects/${projectId}/datasets/${datasetId}/tables/${tableId}/insertAll`;

  const body = {};
  body["kind"] = "bigquery#tableDataInsertAllRequest";
  body["rows"] = [{ "json": dataObj }];
  if ( templateSuffix !== "" && templateSuffix !== "" ) {
    body["templateSuffix"] = templateSuffix;
  }

  const response = httpClient.begin()
    .authSetting( oauth2 )
    .body( JSON.stringify(body), "application/json; charset=UTF-8" )
    .post(encodeURI(uri));

  const status = response.getStatusCode();
  const responseStr = response.getResponseAsString();
  if ( status >= 300 ) { // when error thrown
    engine.log(responseStr);
    throw `Failed to insert data. status: ${status}`;
  }
  const errors = JSON.parse(responseStr)["insertErrors"];
  if ( errors !== undefined ) {
    engine.log(JSON.stringify(errors));
    throw "Failed to insert data.";
  }
}

  ]]>
</script>

<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAERUlEQVRYR8WXfWyTVRSHn9uvdW1X
4lgIwShTTDRo1KEGExMC3R/zI6goCNvUIEbd0BHRRWAbkeCmwCBOcY4QnBEF2YygosmMrMyoCUgC
xiBqAqImED/Ama1f69c19+3add3bt0UxvX++Ofec55x7fufeV1DgJfKNP3/dWUfA6r4PmCclFQhZ
DuKSxH45iBQ/C8Ex4KAjMrR3/7ppgXx85wSYu8k31RRlFZI6wJ6PUyCEYFvcwsaB51y/Ge0xBPC0
DtchxGbAmWfgTDM/UjZ6W0q2ZdufFcDT5n8dZP2/DJyxTXR5m53L9XzpAnhah3cjRPXFCT7qRcp3
vS0lNZk+JwBc3MwnhJtQiXEAo2feZZT5FLeg6noLl5aakBJ+PRen79sog36ZX8GkrE/viRSA1u0R
TmZruKmTBOsX2ZkxxaQb6MSZOGvfC/F3ICeIP27lqqQ6UgCeF30vI3laz/t1l5nZUmvHMho7GoPf
h+KYhaDMLVLfw1FY/maQ03/Gjash6PA2uVYqIw1ADRm/1X1eT+eTHILeBgcWM8TisONgmN7DkVQA
IWDpHBu1t1k1Z8Gw5P5XAoyMmejBhJyRoclqWGkAlW2+ByW8rWfZXmNnVrlZO++n3gryw1n97G6+
wsyGarsGceB4lJc+GjGsgoCH+ptd7yQB3pCwLHOHKnnfKicqy71HInR+FtZMTAKeqLQxFJTs+mos
1ZZ7i5g300IkBrdv9OcC6O5vdj2qAXhafUcRVGTuuOVKMxuWJKbvne3+VFmLbYKPGx2oXqhKC1RW
IuhpcGj2D3cFOTNo0AuSY94W16wEQNvwX2MXyxjGPTdZWVFl0wIrACW/2TPMdPSF2bdyIoDa+elq
p9aUTT0hDp+KGVRBDnqbS0pHAXy62rnjBguNdxWlMlVKuHG6mSVbA+xpSAAs6AjQ9Yid/u+i7Pwi
woEmp9YHz+4K8c0vRgDgbXap01UV0AeYXmai+/FiLYv67qB27pkANZ0Belc4OHQyxv6jEdoeSBzZ
/C0BAiPGMyENQP8IlKMPn3HgsgtO/xGn/ZMROpcWU/3aWAUUwO4nHSzbHmRzrR01Kc8NSxZvzfUc
SD+CLE2oABbNtlJXadOy6j8eZcdAmOEQWg/4Q5KFrwZwFwvW3F2Ealq1XvhghIETUUMVkN6ElW0+
XRkmPaisr5mWGIPnfZKeQxE+/z6qydFzrYXFt1o1iOQ68lOM1XtC+cvQaBAldb+p2k5FeSLDfNbX
p2Ks6ckOMW4QGY3i9GBKgo95bFw+2YQ5eS/E0fpDDalSl2DtgqLEfAe+/DHG8+/rQowfxZoSDC4j
vYxV+VWPqxGdvubOtKAmooJQMlRynLAyLyNlkOs6zqfsSRsFMedqM+v36d4H+texVoXEI9TwQXIh
ILq22R4kSeOCPslSEIV8lP4/lbjAZ3laJQr3Y5Lq6EL+mqV3ccF+Tv+z7HI4+AfnY90wO/4PaAAA
AABJRU5ErkJggg==
</icon>

</service-task-definition>
