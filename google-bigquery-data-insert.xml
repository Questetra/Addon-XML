<?xml version="1.0" encoding="UTF-8"?><service-task-definition>
<label>Google BigQuery: Insert New Data</label>
<label locale="ja">Google BigQuery: データ追加</label>
<last-modified>2021-05-17</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>2</engine-type>
<summary>Insert a new data row to a table on BigQuery.</summary>
<summary locale="ja">BigQuery のテーブルにデータを１行追加します。</summary>
<configs>
  <config name="conf_auth" required="true" form-type="OAUTH2" oauth2-setting-name="https://www.googleapis.com/auth/bigquery.insertdata">
    <label>C1: OAuth2 Setting Name</label>
    <label locale="ja">C1: OAuth2 設定名</label>
  </config>
  <config name="conf_projectId" required="true" form-type="TEXTFIELD">
    <label>C2: Project ID</label>
    <label locale="ja">C2: プロジェクト ID</label>
  </config>
  <config name="conf_datasetId" required="true" form-type="TEXTFIELD">
    <label>C3: Dataset ID</label>
    <label locale="ja">C3: データセット ID</label>
  </config>
  <config name="conf_tableId" required="true" form-type="TEXTFIELD">
    <label>C4: Table ID</label>
    <label locale="ja">C4: テーブル ID</label>
  </config>
  <config name="conf_templateSuffix" required="false" form-type="TEXTFIELD" el-enabled="true">
    <label>C5: Template Suffix (required if the table is a base template)</label>
    <label locale="ja">C5: テンプレートサフィックス（テンプレートテーブルの場合のみ）</label>
  </config>
  <config name="conf_field1" required="false" form-type="TEXTFIELD">
    <label>C6F: Field 1</label>
    <label locale="ja">C6F: フィールド_1</label>
  </config>
  <config name="conf_value1" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C6V: Value 1</label>
    <label locale="ja">C6V: 値_1</label>
  </config>
  <config name="conf_field2" required="false" form-type="TEXTFIELD">
    <label>C7F: Field 2</label>
    <label locale="ja">C7F: フィールド_2</label>
  </config>
  <config name="conf_value2" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C7V: Value 2</label>
    <label locale="ja">C7V: 値_2</label>
  </config>
  <config name="conf_field3" required="false" form-type="TEXTFIELD">
    <label>C8F: Field 3</label>
    <label locale="ja">C8F: フィールド_3</label>
  </config>
  <config name="conf_value3" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C8V: Value 3</label>
    <label locale="ja">C8V: 値_3</label>
  </config>
  <config name="conf_field4" required="false" form-type="TEXTFIELD">
    <label>C9F: Field 4</label>
    <label locale="ja">C9F: フィールド_4</label>
  </config>
  <config name="conf_value4" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C9V: Value 4</label>
    <label locale="ja">C9V: 値_4</label>
  </config>
  <config name="conf_field5" required="false" form-type="TEXTFIELD">
    <label>C10F: Field 5</label>
    <label locale="ja">C10F: フィールド_5</label>
  </config>
  <config name="conf_value5" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C10V: Value 5</label>
    <label locale="ja">C10V: 値_5</label>
  </config>
  <config name="conf_field6" required="false" form-type="TEXTFIELD">
    <label>C11F: Field 6</label>
    <label locale="ja">C11F: フィールド_6</label>
  </config>
  <config name="conf_value6" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C11V: Value 6</label>
    <label locale="ja">C11V: 値_6</label>
  </config>
  <config name="conf_field7" required="false" form-type="TEXTFIELD">
    <label>C12F: Field 7</label>
    <label locale="ja">C12F: フィールド_7</label>
  </config>
  <config name="conf_value7" required="false" form-type="TEXTAREA" el-enabled="true">
    <label>C12V: Value 7</label>
    <label locale="ja">C12V: 値_7</label>
  </config>
</configs>
<help-page-url>https://support.questetra.com/bpmn-icons/service-task-google-bigquery-data-insert/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/bpmn-icons/service-task-google-bigquery-data-insert/</help-page-url>

<script><![CDATA[

// OAuth2 config sample at [OAuth 2.0 Setting]
// - Authorization Endpoint URL: https://accounts.google.com/o/oauth2/auth?access_type=offline&approval_prompt=force
// - Token Endpoint URL: https://oauth2.googleapis.com/token
// - Scope: https://www.googleapis.com/auth/bigquery.insertdata
// - Consumer Key: (Get by Google Developer Console)
// - Consumer Secret: (Get by Google Developer Console)

const FIELD_NUM = 7; // 扱えるフィールドの数

main();
function main(){
  //// == 工程コンフィグ・ワークフローデータの参照 / Config & Data Retrieving ==
  const oauth2 = configs.get("conf_auth");
  const projectId = configs.get("conf_projectId");
  const datasetId = configs.get("conf_datasetId");
  const tableId = configs.get("conf_tableId");
  const templateSuffix = configs.get("conf_templateSuffix");
  const dataObj = retrieveDataObj();

  //// == 演算 / Calculating ==
  insertData( oauth2, projectId, datasetId, tableId, templateSuffix, dataObj );
}

/**
  * config からフィールドと値の組を読み出し、JSON オブジェクトを返す
  * @return {Object} dataObj  データオブジェクト
  */
function retrieveDataObj() {
  const dataObj = {};
  for (let i = 0; i < FIELD_NUM; i++) {
    const field = configs.get(`conf_field${i+1}`);
    let value = configs.get(`conf_value${i+1}`);

    if ( field === "" || field === null ) { // フィールドが空
      continue;
    }
    if ( dataObj[field] !== undefined ) { // フィールドコードの指定が重複
      throw "The same Field is set multiple times.";
    }
    
    if ( value === "" || value === null ) { // 値が空
      value = null;
    }
    dataObj[field] = value;
  }
  return dataObj;
}

/**
  * データ追加の POST リクエストを送信する
  * アプリ ID が空、または不正な文字列であればエラーとする
  * @param {String} oauth  OAuth2 認証設定
  * @param {String} projectId  プロジェクト ID
  * @param {String} datasetId  データセット ID
  * @param {String} tableId  テーブル ID
  * @param {String} templateSuffix  テンプレートサフィックス
  * @param {Object} dataObj  データオブジェクト
  */
function insertData( oauth2, projectId, datasetId, tableId, templateSuffix, dataObj ) {
  const uri = `https://bigquery.googleapis.com/bigquery/v2/projects/${projectId}/datasets/${datasetId}/tables/${tableId}/insertAll`;

  const body = {};
  body["kind"] = "bigquery#tableDataInsertAllRequest";
  body["rows"] = [{ "json": dataObj }];
  if ( templateSuffix !== "" && templateSuffix !== "" ) {
    body["templateSuffix"] = templateSuffix;
  }

  const response = httpClient.begin()
    .authSetting( oauth2 )
    .body( JSON.stringify(body), "application/json; charset=UTF-8" )
    .post(uri);

  const status = response.getStatusCode();
  if ( status >= 300 ) { // when error thrown
    engine.log(response.getResponseAsString());
    throw `Failed to insert data. status: ${status}`;
  }
}

  ]]>
</script>

<!-- アイコン未設定
<icon>
</icon>
-->

</service-task-definition>
