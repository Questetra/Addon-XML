<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<last-modified>2018-12-28</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>1</engine-type>
<label>Send message to Slack</label>
<label locale="ja">Slack にメッセージ投稿</label>
<summary>Send a message to Slack with Incoming Webhook.</summary>
<summary locale="ja">Incoming Webhookを使ってSlackにメッセージを投稿します。</summary>
<configs>
  <config name="Url" required="true">
    <label>C1:Incoming Webhook URL</label>
    <label locale="ja">C1:Incoming WebhookのURL</label>
  </config>
  <config name="Text" form-type="TEXTAREA" el-enabled="true" >
    <label>C2:Sending Text</label>
    <label locale="ja">C2:送信するテキスト</label>
  </config>
  <config name="Fallback" form-type="TEXTAREA" el-enabled="true" >
    <label>C3:Fallback</label>
    <label locale="ja">C3:フォールバックメッセージ</label>
  </config>
  <config name="Color">
    <label>C4:Attachment Color</label>
    <label locale="ja">C4:Attachmentの色</label>
  </config>
  <config name="Title" el-enabled="true" >
    <label>C5:Attachment Title</label>
    <label locale="ja">C5:Attachmentのタイトル</label>
  </config>
  <config name="TitleLink" el-enabled="true" >
    <label>C6:Title Link</label>
    <label locale="ja">C6:Attachmentのタイトルリンク</label>
  </config>
  <config name="AttachText" form-type="TEXTAREA" el-enabled="true" >
    <label>C7:Attachment Text</label>
    <label locale="ja">C7:Attachmentのテキスト</label>
  </config>
</configs>
<help-page-url>https://dummy.com</help-page-url>
<help-page-url locale="ja">https://dummy.com</help-page-url>
<script><![CDATA[
main();
function main() {
  let jsonRes = {};
if (configs.get("Text") != "" && configs.get("Text") != null){
    jsonRes["text"] = configs.get("Text");
  }
  let attachment = {};
  attachAdd(attachment,"Fallback","fallback")
  attachAdd(attachment,"Color","color")
  attachAdd(attachment,"Title","title")
  if (configs.get("Title") != "" && configs.get("Title") != null){
    attachAdd(attachment,"TitleLink","title_link");
  }
  attachAdd(attachment,"AttachText","text")
  if (attachment != {}){
    jsonRes["attachments"] = [attachment];
  }
  if (jsonRes == {}){
    throw "Message to send isn't set.";
  }
  const url = configs.get("Url");
  
  let response = httpClient.begin()
    .body(JSON.stringify(jsonRes), "application/json; charset=UTF-8")
    .post(url);

  const status = response.getStatusCode();
  const responseTxt = response.getResponseAsString();
  if (status >= 300) {
    const error = "Failed to send \n status:" + status + "\n" + responseTxt
    throw error;
  }
  engine.log("status:" + status);
  engine.log(responseTxt);
}
function attachAdd(attachment,config,attachName){
  let value = configs.get(config)
  if (value != "" && value != null){
    attachment[attachName] = value
  }
}
]]></script>
<icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAE7UlEQVRYR8VXbUybVRR+bgsFSvka
nXyEjzFhDCihm4sfZBtT41zaROcfjVnM2D8Tf6xT44gmysxmqP6wS9T4R8XERP/4tUhNnNu6LIrZ
jIIUBiIryGR8U0opbWnfa+5l75u3fd9+oGbeP2/ynnPuec65zznnXoL/eZHN+H9pyHmYCGgjgJmC
FhIQM7OnoH0ExEuBPhDqsjdZv05335QAbJ5LhdmB4HEqCDZCSGE6G1NKvUSjcQT12WcdNQ96k9kk
BdAx2NNOBbydruN4RwwI1ZJjbzZavkoEIiGAk26ngwDH04k4lQ4FHHaT5YSaniqADrezG8DRVBtv
Tk67u0zWY/E2CgCpIm/KK4G5sBx3ZRlgyMiCTqOFlmgQoQJW1oMY8c/h3K0hVWwUOGs3WWxyYQwA
duag5CM16ycrWlCj34KCzGykYu5EYAnve35SBSFo8IScE9JejO1Z/oAnnnCPltTj3qJK6LWZm8r4
oG8Gn0z+orBhxAwZ9DVidUgAOgZ6OkHIa3KLpyvMMBWUQpMg5iil8EdCPCvxi8k+nfwVgyszSuCU
nupqtnYygQTg5IDTSwgKRO0243YcLNmR0DnTu7m2jHdv/IiX6x9CXkaWwtHkmhfv3ehVzYK92Vok
AWAdTiPgS7nmidp9nGjyNeCbRo42E7W5xfz3SiSEN0Yu4rGyRmRrMxGIhPFAcbUEep1GYR9xYTUa
VoAQucAzoMb8Uw0HOcPlyzU/ht6FP/FC3X74IkGMry7h86kBScVa2oBWGQAm6F2cUK0KsSI4gI4B
pwsEbXJnZ5oOxaQ/SgW4fdP47GZ/DKi7c4sxtroAtYwxxb+CPrwz9oMKD3C5q9lyYAOAu2ccINVy
rdONh6AlGxRhKeye+JmfOVt1BiNYdRh1eoSFKD+Go1V7sDNvq8IRsz09fEHJA9A+u8m66zYAJ43X
eLXhEeRoMvhv5oRFzzjBvoO+adhq9/EGxAwZ2ykoHi8zYXE9gNKsPOn4mPzM8AVVHnSZLBshdriV
AF6sa0OxTq9ALjaZ5+v2Y6suF/5oGL0LE7g494ek+9z2VlTkSAWFL6bcuLY0qdhLBkB5BO3Ve1Bv
SJzS1i3VWKdCzMZ7i7dhr7EG+Rmx3fK72d9xaW4sBgAF7bebrOaEJLyvqAqHy5tijBgHrix48Nvy
Lf6/Ob8UuwsrUJadh2+mh8CazzNV9yjaFiNu//JUbAaojISJBtArOx+GQauTDL+dGcZCKICynHx8
PzvKy9Goy+VyT2ARV+Y9OFK5i3NDXCEhgs7r51VIuDGYeAbUGhH7H38MIlODQgSvXz+PI5W7Ycov
kTYXQBWdc9Q/jw8nrikAxDQiJo1vxewfYz0jVHxDYrKZ0Aofx7myDMV7WQwH8NboZWX0FMv2Zgu/
3iUdRkzhqYoWmAvKFZsk+8EyxebAB+NXeQmrIFAOo41xvDYuH0ii4bM196Naz2dH0sW65Vx4lZfl
VZWyY8aUYjlkyNmmGMdMmOpCssNgVKR8TYjAtx7EVNAH19wYZkP+pCATXkhEq1RXslRZSCqX3QNE
vTt4KcXHXSZLezzAO3Ith0rkSTMgCvlTLIpuNWKmcxSMcFSL9n/0MBEd8KeZP2CjILZ0gTDHBNQR
NOgd/+ppFh/l7cfpAUJhpoQ/Tlt4aYH2E0q8lKCPauBKFnHaHEgnxf+Fzt/OVCU/AEX4TwAAAABJ
RU5ErkJggg==</icon>
</service-task-definition>