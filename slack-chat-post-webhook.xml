<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<last-modified>2021-08-26</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>2</engine-type>
<label>Slack: Post Chat (Incoming Webhook)</label>
<label locale="ja">Slack: チャット投稿 (Incoming Webhook)</label>
<summary>Send a message to Slack with Incoming Webhook.</summary>
<summary locale="ja">Incoming Webhook を使って Slack にメッセージを投稿します。</summary>
<configs>
  <config name="Url" required="true">
    <label>C1: Incoming Webhook URL</label>
    <label locale="ja">C1: Incoming Webhook の URL</label>
  </config>
  <config name="Text" form-type="TEXTAREA" el-enabled="true" >
    <label>C2: Sending Text</label>
    <label locale="ja">C2: 送信するテキスト</label>
  </config>
  <config name="Fallback" form-type="TEXTAREA" el-enabled="true" >
    <label>C3: Attachment Summary (In notifications when no sending text)</label>
    <label locale="ja">C3: Attachment の要約 (送信テキストが空の場合に、通知で使用される)</label>
  </config>
  <config name="Color">
    <label>C4: Attachment Color</label>
    <label locale="ja">C4: Attachment の色</label>
  </config>
  <config name="Title" el-enabled="true" >
    <label>C5: Attachment Title</label>
    <label locale="ja">C5: Attachment のタイトル</label>
  </config>
  <config name="TitleLink" el-enabled="true" >
    <label>C6: Attachment Title Link</label>
    <label locale="ja">C6: Attachment のタイトルリンク</label>
  </config>
  <config name="AttachText" form-type="TEXTAREA" el-enabled="true" >
    <label>C7: Attachment Text</label>
    <label locale="ja">C7: Attachment のテキスト</label>
  </config>
</configs>
<help-page-url>https://support.questetra.com/bpmn-icons/slack-chat-post-webhook/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/bpmn-icons/slack-chat-post-webhook/</help-page-url>
<script><![CDATA[
main();
function main() {
  let jsonReq = {};
if (configs.get("Text") !== "" && configs.get("Text") !== null){
    jsonReq["text"] = configs.get("Text");
  }
  let attachment = {};
  attachAdd(attachment, "Fallback", "fallback");
  attachAdd(attachment, "Color", "color");
  attachAdd(attachment, "Title", "title");
  if (configs.get("Title") !== "" && configs.get("Title") !== null){
    attachAdd(attachment, "TitleLink", "title_link");
  }
  attachAdd(attachment, "AttachText", "text");
  if (attachment !== {}){
    jsonReq["attachments"] = [attachment];
  }
  if (attachment["title"] == null && attachment["text"] == null && jsonReq["text"] == null){
    throw "Message to send isn't set.";
  }
  const url = configs.get("Url");
  
  let response = httpClient.begin()
    .body(JSON.stringify(jsonReq), "application/json; charset=UTF-8")
    .post(url);

  const status = response.getStatusCode();
  const responseTxt = response.getResponseAsString();
  if (status !== 200) {
  engine.log(`${responseTxt}`);
  throw `Failed to send. status: ${status}`;
    throw error;
  }
}
function attachAdd(attachment, config, attachName){
  const value = configs.get(config);
  if (value !== "" && value !== null){
    attachment[attachName] = value;
  }
}
]]></script>
<icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAABFBJREFUWEfN
l39ME2cYx79vofwSEljXirCwLWOSYJRotjgnJDPZWNKjg4BYpDgnCCuYKCxmxLUu7pcJZupitmqY
XTfFLRnaqeXqYibbXExIdNQ/tj+WLMvCEjPoGGABxULf5b3Sy7W9a0+zhd0f/aP3Ps/zeZ/fR7DE
D1Fr31RgygrNh2pBsYmCrAXoYwDyFuUnAPI7AfWB4FtNqsbtueWZVaM7KYBRb8wnIN0UsALIUKMU
wF0CnKCgPV6/989EMgkBjIYqKyh9H8AylYZjj82AkL3esYETSvKKANzDnIMStD+g4SgxQnGc/4vv
kNMlC2A0cJ+DYuu/YVzUQfCFd4xvjNUZB6Dm5kUlRRj5ZUTUlZOXA41Gg6nxqYTMcp6IAliM+XEl
LcyQa9iFzGUZmJ6cxrbVL6PhNTO2dG4BIQS8i4ejW1E8rJaQdmlOiAAs2wHya6KEaznQjNqOWpHv
1MFTgvGMrHBxzAfnUV1YkyxyMwAtjlSHCMDpuaMU6EwkXVZRhoPn3hOPeD+7hBctlUhJTRH/4wxV
yQBAgA94P98lOIT9sCazEAyNq6lzBtHR0460jDSc+9CNtndb7xuA9YkUrUbHmpUAwBm4JkpxOha9
4PEVaHmrBfmP5ke9unc3CM9JDwb7B3Hx1oU4gFXrS9HU3YShr4dwofeirEcIwTZ+jO8LA+g5JwWa
Y0/2/XQaeYZIt43Xs+eFThy5dDgKwLyyAWd+7kOqNlUQ6GnrwdXzP8QJE+AT3s+3CABGfdUwQNfG
nhoY9QjZrfSwJDR3mZGemS4cCd4Lwv2RW/gv8jAvHd51REYF8Xn9A+sWAbi/JYNFPGz71IZnjRtk
7c/dmYOl1ILttu0w7TQJZxyvO6B/RI/63fViVbRteBWjI6NyOia8fv6hCABVumVxWTHWbFyNhfkF
TI3fDt90LohrA9dEEZYrLFSjf4xBl6/DqmdKMTt9B5fPXEZoIaToQa+fD/vXqOdkAXbsfwV1u+pA
NERwr/nJBnw81AvdCp1wq53rW4XbN7+5Q4y51NqkfxLW8nYEJgKyEFIA2RBIM1wuvr32XjTubUR2
brbiLRN0R2kI5JPw7G/9yMzOFJT7vvdh5vYsyk0bRWOsEZWVr0HhE4WKAM4DTrgdXyVOQqUyfPr5
p9D6TisCkwHYN9vReawrDsD1tgs21xsoWVcSZYTlzPB3PhyyHgINxUc4qgyVGlEs9j7nvjiAXH0u
snKy8OOVGwo3lXdOVCNS24rlAKSz4ObVm7BttiuGQ/IiuhWzF2qG0Z6ju1FpqRT19B/rR421Bto0
rfAfc/tLBdVJAeKGUbgUk4/j5UXL4bx+UuiOLK6NpRZhMFVUV4iJaq/fnwxAfhwLEOElNOFGwUpu
U91zuPLlIGYD4c2bTci0dC2uf3MjmXHlhSQiqWYlS25FIfFkltP/31L6X3jivtfyCMSSfpiIEEv5
aSZNpSX7OH3QjFcr9w829dcwn81r2gAAAABJRU5ErkJggg==</icon>
</service-task-definition>
