<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<last-modified>2019-06-21</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>1</engine-type>
<label>Box: Delete File</label>
<label locale="ja">Box: ファイル削除</label>
<summary>Delete files or folders on Box.You can delete multiple files or folders at once.When you delete multiple ones,you should write one file/folder ID on each line.</summary>
<summary locale="ja">Box上のファイルやフォルダを削除します。一度に複数の削除が可能です。複数削除する場合、データ項目では1行につき1つずつIDを書くようにしてください。</summary>
<help-page-url>https://support.questetra.com/addons/googledrive-folderdelete/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/googledrive-folderdelete/</help-page-url>
<configs>
  <config name="UserID" form-type="QUSER" required="true">
    <label>C1: User who connect to Google Drive</label>
    <label locale="ja">C1: Google ドライブに接続するユーザ</label>
  </config>
  <config name="FileIdsItem" form-type="SELECT" select-data-type="STRING" required="true">
    <label>I1: Data Item with File/ Folder IDs to delete</label>
    <label locale="ja">I1: 削除するファイル・フォルダ ID が保存されている文字型データ項目</label>
  </config>
</configs>

<script><![CDATA[
main();
function main(){
  const fileIds = engine.findDataByNumber(configs.get("FileIdsItem"));
  if (fileIds == null) {
    throw "File IDs aren't set.";
  }
  const linesArray = fileIds.split("\n");
  const numOfLines = linesArray.length;
  if (numOfLines > httpClient.getRequestingLimit()){
  	throw "Number of File IDs is over the limit."
  }
  
  const userId = configs.get("UserID");
  const quser = quserDao.findById(parseInt(userId));
  if (quser == null) {
    throw "User not found:" + userId;
  }
  engine.log("User Name:" + quser.getName() + "\n");
  let token;
  try{
    token = httpClient.getGoogleOAuth2Token(quser, "Drive");
  }catch(e){
    throw "This User has not connected with Google Drive."
  }
  for (let i = 0; i < numOfLines; i++){
    deleteFile(token, linesArray[i])
  }
}
function deleteFile(token, fileId) {
  const url = 'https://www.googleapis.com/drive/v3/files/' + fileId;
  let response = httpClient.begin()
    .bearer(token)
    .queryParam("supportsTeamDrives","true")
    .delete(url);
  const status = response.getStatusCode();
  if (status >= 300) {
    const error = "Failed to delete:" + fileId + "\n" + status + "\n" + response.getResponseAsString();
    throw error;
  }else{
    engine.log("File ID" + fileId + "\n" + "status:" + status + "\n"+"delete successful" + "\n");
  }
}

]]></script>
  
  <icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADLUlEQVRYR2NkYGBgZBhAALJ81AFE
hUBmYabNj19/dglzM7ERirGerpkshNTA5ImOgvTClGu/fjEq5AfeYdeX+YrT0cv2S3y69kjgVGv7
IjdiHEGUAzKK0nKf8X9peyz5ntv5jty/7qTzTPgML51n+O/rbyaH6f3TjxByBFEOSMxO/XZB/wnH
d6k/DGpnRb82WT/nwhcKF59w/5++VfnmzP45WhQ7IL0wdfZzga8Rt4xfc4MM43zGwkBMKICi4vBt
idoZfbMm43ME3hAAJbx/DL9nHXR+qAEzBOQA2eeCBEMBpD5psv6P+VNnc5HtgOrKuF2XOf5YwnyP
7oiN4XfAoYILEJMgcYYAyPdPBT5uR7ccFg2gUAgX+/I3yvEFHyUJEqcDQNnulOZTDVDCQwegaAAB
g4syPwhlS1CCXL1Xdi+ubInVAbBsh833yNEAcgAb2/8HM9IvwdMIttDAlyAxHIAt4WEzFJQdJT9w
rwDJ2am9DMUXFfiyJYYD0LMdNstBUQDyPSyFg8qJebkXOQglyEO3xFfP7J+diqwOxQGk+F7qI08V
LI+DosxW9UUzoQQJypYcbCxuyCUkigPwJTzkuDe7Ln0DvZQD6c30vqtOqIRET5BwBxCT8ECOsN8r
f4OJgTUNvZyHhR6pCRLuAOTyHldcwhIeejzC1IPSDyhBBuvu42MXwV4NoGdLsAOISXj4fA9zACwU
JgavwJktQQ4DZUtYgoQ6AHehAzMc5HvhV9zM/xkl/uFL7SA5xv8vmAg1XD7//nsLlI7ADiAm/i23
K/y48ywQnNXY9S0ZePlx1zGfP37D60aZN33fONheVoJyETwN4MsBIN+/vxADrngIWU4odDjeH/vP
93kpvK0AdwCszXfc8wFKgQKyXOi1MuPdp5ZclFoOchz/3ZZvnKxvPGC5CK0cwGx8gEo8UNBTw3KI
75fNQ85FGEUxLDvCajtqWQ5KF8ofSzEKMAwHwBIkyAGgoH8iUsSFL8ERinOYPCjoYQkPZ12AKFBS
rj0X+Cb77f9UbmpYjp7wCDoAlCC//xbZQazviFGHnPAIOoAYA6mlhqh+AbUsw2bOgDsAAHEO2FDM
6/Q2AAAAAElFTkSuQmCC</icon>
</service-task-definition>