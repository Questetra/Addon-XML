<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<engine-type>1</engine-type>
<last-modified>2019-08-23</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<label>Sendgrid: </label>
<label locale="ja">SendGrid: </label>
<summary> by SendGrid</summary>
<summary locale="ja">SendGrid で</summary>
<help-page-url>https://support.questetra.com/addons/sendgrid/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/sendgrid/</help-page-url>
<configs>
  <config name="Key" required="true">
    <label>C1: API Key</label>
    <label locale="ja">C1: API Key</label>
  </config>
  <config name="Address" el-enabled="true" required="true">
    <label>C: </label>
    <label locale="ja">C2: 送信先のメールアドレス</label>
  </config>
  <config name="Subject" el-enabled="true" required="true">
    <label>C: </label>
    <label locale="ja">C3: 件名</label>
  </config> 
  <config name="Content" el-enabled="true" required="true">
    <label>C: </label>
    <label locale="ja">C4: 本文</label>
  </config>
</configs>

<script><![CDATA[
main();
function main(){
  const address = configs.get("Address");
  const subject = configs.get("Subject");
  const content = configs.get("Content");
  
  const json = {
    "personalizations": [
      {
        "to": [{}],
      }
    ],
    "from": {
      "email": "from_address@example.com"
    },
    "content": [
      {
        "type": "text/plain",
      }
    ]
  };
  json.personalizations[0].to[0].email = address;
  json.personalizations[0].subject = subject;
  json.content[0].value = content;
  
 const response = httpClient.begin()
    .bearer(configs.get("Key"))
    .body(JSON.stringify(json),"application/json; charset=UTF-8")
    .post("https://api.sendgrid.com/v3/mail/send");

  engine.log(response.getStatusCode());
  engine.log(response.getResponseAsString());
}

]]></script>

<icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEBElEQVRYR82Xb2jbRRjHP/fL2jXJ
0qSd65x11aK0YgJWZUwEWZ0DfSNaHYKKmgykbP7pH/SVghvCkIlb6kREwfyGOougbgxB2Yt1oGwg
aietdOJoV21ty2ob26xdm+TkLsufJr+2Sdtt3pv8uDx3z+ee+z53zwmucRMF+ff/9ijEtwB1IDwI
9QtIOkGOA50I0UHIezTfeRcH8Pd64GITyGaE8OQ1sVQwIgiONsxqBTZvWxjA3+UHDuTtONuNBjEC
mLcfmY9gfgB/dxBBU14rXsxIyiCmr8XKzBog0GWCeG6xeQv6X2JiegPZY3IBVnLlOVtCG6a3ObN7
LoDacyFCBa2sUGMpGjI1kQbQao/0Lllw+YJoYTqrk9mRAdC9G8Eb+c6zLDvJHkzvbjVHGiDQpXLX
nZw4tOMGyp02Hjn457J8WQ5WUTB9ZWkAdcIJ+XWm8XCwFkexwLWrZ+UB9OmZ0EIiAhbKH2lLAKzZ
eaUAEhmRAAh0dYBQZ3yqKQDnaoPDp8PUVZXo/pM9EV75Ylh/77q/jO2bSlmz2mBgLErjoUHad95I
Z/80re0Jmw+e3UD1dcU8uP+8RRTlSUK++ssA3X3ATdkA61y2nIE/9k7Rd2GWx+4uxWZkAP8bo9Ru
YAho+XyIUruNNxsqiMzE8bxgEUV1gZneO5MAMtuTioACUM7e+W4Uj8Pg5W1rdV9cwvSsxPx+nNPn
LvLStnI2VdsZi8TwOGyMTsY0nNth493j/9DSPmSto5BXLAigsmDLW7388MeUnuDVh9ay74n1+vvI
zxM0vJfOkNGDtdiLDH7pn+beW+3a5kRPhK37rMJ/mScDIGcLBvfXsM61isrWs4xMxPSIpza7+ayx
Un8rbTz94UBqZX8fqNFp+82vkzTc5dL9n54K88xHaZu5YZBnCPnq5hXhqdequecWO2rPH3j7PBvc
qzjWVEXN9cV6HhVmJbwvf5rgcGMlT2526y1wldiYiUl9wKhtUHp4/8TYIiK0SMP6WgdfvbiRMqeN
yKU4NkNQUiToH51lcDyq4aIxtMjcdoOpGYkSkrJpOz6qt6OxvowLkzEqms7mAsjMNLQ4iNSIrbc5
2bu9QqdSNC7pHrjEjo8H+GssyifPV3JfjQNHscFQOMqeoyPsfXw9vw/P8HBbv3b4bWsVG8uL8L5+
zgIg8yBSf2cdxdayXaleGSbk0+Xd/+gyUtexiPRlXkgrtd4s9YeRzptzr2NldU0LkiTmlS3JUnVA
0t3VK0qRhwj5VJk/p12lsjxdAeUPoDWhCpW4KtFTlVJhwpRhpOFf2sMkpQn9NGtGyOb8QZRj/TQL
Lu9plr1c/TiV9QipHqUeEHckTOQZYBwpOkF0LLTiwragsHgvyfo/g3CBMFgjn40AAAAASUVORK5C
YII=</icon>
</service-task-definition>