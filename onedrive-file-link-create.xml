<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
    <label>Microsoft 365 OneDrive for Business: Create Shared Link</label>
    <label locale="ja">Microsoft 365 OneDrive for Business: 共有リンク作成</label>
    <!--
    <last-modified>2023-09-28</last-modified>
    -->
    <license>(C) Questetra, Inc. (MIT License)</license>
    <engine-type>3</engine-type>
    <addon-version>2</addon-version>
    <summary>
        This item creates a URL to access the specified file/folder in OneDrive so that anyone who knows the link can view it.
    </summary>
    <summary locale="ja">
        この工程は、OneDrive 内の指定ファイル / フォルダにアクセスできる URL を作成し、リンクを知っているすべての人が閲覧できるようにします。
    </summary>
    <configs>
        <config name="conf_OAuth2" required="true" form-type="OAUTH2" auth-type="OAUTH2"
                oauth2-setting-name="https://graph.microsoft.com/Files.ReadWrite.All">
            <label>C1: OAuth2 Setting</label>
            <label locale="ja">C1: OAuth2 設定</label>
        </config>
        <config name="conf_DriveItemUrl" required="false" form-type="SELECT" select-data-type="STRING_TEXTFIELD"
                editable="true">
            <label>C2: File / Folder URL to share</label>
            <label locale="ja">C2: 共有するファイル / フォルダの URL</label>
        </config>
        <config name="conf_SharedLink" required="true" form-type="SELECT" select-data-type="STRING_TEXTFIELD">
            <label>C3: Data item to save the Shared Link</label>
            <label locale="ja">C3: 共有リンクを保存するデータ項目</label>
        </config>
    </configs>
    <help-page-url>https://support.questetra.com/bpmn-icons/service-task-onedrive-file-link-create/</help-page-url>
    <help-page-url locale="ja">https://support.questetra.com/ja/bpmn-icons/service-task-onedrive-file-link-create/</help-page-url>


    <script><![CDATA[
// OAuth2 config sample at [OAuth 2.0 Setting]
// - Authorization Endpoint URL: https://login.microsoftonline.com/{your-tenant-id}/oauth2/v2.0/authorize
// - Token Endpoint URL: https://login.microsoftonline.com/{your-tenant-id}/oauth2/v2.0/token
// - Scope: https://graph.microsoft.com/Files.ReadWrite.All offline_access
// - Consumer Key: (Get by Microsoft Azure Active Directory)
// - Consumer Secret: (Get by Microsoft Azure Active Directory)

const GRAPH_URI = 'https://graph.microsoft.com/v1.0/';

function main() {
    //// == 工程コンフィグの参照 / Config Retrieving ==
    const oauth2 = configs.getObject('conf_OAuth2');
    const driveItemUrl = retrieveDriveItemUrl();
    const sharedLinkDef = configs.getObject('conf_SharedLink');

    //// == 演算 / Calculating ==
    const driveItemInfo = getDriveItemInfoByUrl(oauth2, driveItemUrl);
    const sharedLink = createSharedLink(oauth2, driveItemInfo);

    //// == ワークフローデータへの代入 / Data Updating ==
    engine.setData(sharedLinkDef, sharedLink);
}

/**
  * config からファイル / フォルダ URL の値を読み出す
  * URL が設定されていない場合はエラー
  * @returns {String} fileUrl ファイル URL
  */
function retrieveDriveItemUrl() {
    const driveItemUrlDef = configs.getObject('conf_DriveItemUrl');
    let driveItemUrl = '';
    if (driveItemUrlDef === null) {
        driveItemUrl = configs.get('conf_DriveItemUrl');
    } else {
        driveItemUrl = engine.findData(driveItemUrlDef);
    }
    if (driveItemUrl === null || driveItemUrl === '') {
        throw 'File / Folder URL is blank.';
    }
    return driveItemUrl;
}

/**
  * OneDrive のファイル / フォルダのメタデータを取得し、JSONオブジェクトを返す
  * APIの仕様: https://docs.microsoft.com/ja-jp/onedrive/developer/rest-api/api/shares_get?view=odsp-graph-online
  * @param {AuthSettingWrapper} oauth2  OAuth2 設定情報
  * @param {String} sharingUrl  ファイル / フォルダの共有 URL
  * @returns {Object} ファイル / フォルダ情報 {driveId, id}
  */
function getDriveItemInfoByUrl(oauth2, sharingUrl) {
    // encoding sharing URL
    const encodedSharingUrl = encodeSharingUrl(sharingUrl);

    // preparing for API Request
    const response = httpClient.begin()
        .authSetting(oauth2)
        .queryParam('select', 'id,parentReference')
        .get(`${GRAPH_URI}shares/${encodedSharingUrl}/driveItem`);
    const status = response.getStatusCode();
    const responseStr = response.getResponseAsString();
    if (status !== 200) {
        engine.log(responseStr);
        throw `Failed to get drive item. status: ${status}`;
    }
    const {
        id,
        parentReference: {
            driveId
        }
    } = JSON.parse(responseStr);
    return {driveId, id};
}

/**
  * 共有URLを unpadded base64url 形式にエンコードする
  * @param {String} sharingUrl  共有URL
  * @returns {String} encodedSharingUrl  エンコードされた共有URL
  */
function encodeSharingUrl(sharingUrl) {
    let encodedSharingUrl = base64.encodeToUrlSafeString(sharingUrl);
    while (encodedSharingUrl.slice(-1) === '=') {
        encodedSharingUrl = encodedSharingUrl.slice(0, -1);
    }
    return `u!${encodedSharingUrl}`;
}

/**
  * OneDrive のファイル / フォルダに共有リンクを作成する
  * @param {AuthSettingWrapper} oauth2  OAuth2 設定情報
  * @param {Object} driveItemInfo ファイル / フォルダ情報 {driveId, id}
  * @param {String} driveItemInfo.driveId  ドライブ ID
  * @param {String} driveItemInfo.id  ファイル / フォルダ ID
  * @returns {String} sharedLink  共有リンク
  */
function createSharedLink(oauth2, {driveId, id}) {
    const requestBodyObj = {
        type: 'view',
        scope: 'anonymous'
    };
    const response = httpClient.begin()
        .authSetting(oauth2)
        .body(JSON.stringify(requestBodyObj), 'application/json')
        .post(`${GRAPH_URI}drives/${driveId}/items/${id}/createLink`);
    const status = response.getStatusCode();
    const responseStr = response.getResponseAsString();
    // 200: OK (returns the existing link), 201: Created
    if (status !== 200 && status !== 201) {
        engine.log(responseStr);
        throw `Failed to create shared link. status: ${status}`;
    }
    return JSON.parse(responseStr).link.webUrl;
}

    ]]></script>


    <icon>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADXUlEQVRYR8WXW0hUURSG/33GbC5e
        8pJJF6nM6YKUmsFAIAZSONOM4FtqL/mQVg9GhXR5iCIiEAqF9KEMsvKpi06OZoRPGaRmVoSGU4om
        aqaMzeXYOLPjTJ7R41w8k8bZLwNn1r/Wt9dee+29CSQeRHR8vVEpd7vzGTAHKKXpADYDiJnTTwEY
        IIR0u+FuYxnmCYx6uxjfSwKotE2JbuoqB0EJALkYpwBYUNQwRHbDZtKNBtMEBVBqG0ooSAUAlcjA
        i81sBPSs3ZRXE0gfEECuM94mlJb+Y2CBjBJSzTbpT/jz5RdAoTU+BGjBSgSf90EeOUz6wsU+fQBW
        cuaLg/nLhABgbs2rV3bmQm8EtHRhTXgBPNUOV/8yCk4st42BbBu/O7wAitzGmyAoE+tlWXYUtxzN
        htOcj78AeqNS4aI/Q9jneH5Ng0x1DCLkMlhZFz59m0ZZ9UfPr4jBOmQkjmtWHgC5rqGIUFIXTHih
        QI3UzVHoH7HhsCYROzZF+JgPjNqxq/iViPgAJfQo25T3wAOg1BnvUkqP+VNGKsLQXpmF5PXCXmR1
        zKJvyAqL3Yn4qHCoN0ZCHs6gvm0YxRXdS0IQQmrtTfpiD4BC2/gOANfffUbjVQ1yMtYKvnNZGJlg
        kZESDeVqGSy2WbzoHPdkpdtswcnKniUBAHQ7TIYMHmBywcEiEPfey0FSgsL7zWJzosc8jazdcQI7
        l5tiwvIbUaowTE47UfXMjMqnX4OBTDlMhlgegC62TNmgwp0z6UhLjsaqMMbzN5f25o4x5O5bhwhF
        WNBZ2mdcyDn3Gu/NloB2DpOBBAToqs7GzqRIr/j7BIu+4V9I2xqN2KhwMSlGbcsgTlV9EAXgswSW
        Bp135pQCrV3jOJSZICowb2RjXWjtHEfh9U5/OsES+BThj8daqOQyb+q/DFuRkbImJADOmKuNg+Xt
        ePOZm6NgzBehv21YfzETek0iGIZgxun2OMjeEx8yACfIv/wWLR1jAq1gGwZqROePqLE/NRZjUzOo
        ezmE++V7ER8tbv35aFzm0o63+YALGlEorfhS0XZsSVSKysTgmANX6nr92QpbMWch7WHEncFSH8dc
        FiS9kPALJemVjIeQ9FL6PzIR8rWch5D0YcJDSPo0E3QQqR6nolreMoz+ACVfiTBvFfnjAAAAAElF
        TkSuQmCC
    </icon>

    <test><![CDATA[



]]></test>

</service-task-definition>
