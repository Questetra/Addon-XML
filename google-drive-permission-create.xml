<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<last-modified>2021-08-10</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>1</engine-type>
<label>Google Drive: Create Permission</label>
<label locale="ja">Google ドライブ: 共有設定</label>
<summary>Create Permissions in the specified files on Google Drive</summary>
<summary locale="ja">Google ドライブ の指定ファイルを共有します</summary>
<configs>
  <config name="conf_UserID" required="true" form-type="QUSER">
    <label>C1: User who connect to Google Drive</label>
    <label locale="ja">C1: Google ドライブ に接続するユーザ</label>
  </config>
  <config name="conf_FileIdItem" form-type="SELECT" select-data-type="STRING" required="true">
    <label>C2:  File / Folder Ids to share</label>
    <label locale="ja">C2: 共有するファイル・フォルダの ID</label>
  </config>
  <config name="conf_SharedRange" form-type="SELECT_ITEM" required="true">
    <label>C3: Shared range</label>
    <label locale="ja">C3: 共有範囲</label>
    <item value="public">
			<label>Public</label>
			<label locale="ja">リンクを知っている全員</label>
		</item>
    <item value="domain">
			<label>Domain</label>
			<label locale="ja">ドメイン</label>
		</item>
  </config>
  <config name="conf_Domain" form-type="TEXTFIELD">
    <label>C4: Domain to share</label>
    <label locale="ja">C4: 共有先のドメイン</label>
  </config>
  <config name="conf_AllowFileDiscovery" form-type="TOGGLE">
    <label>C5: Allow the file to be discovered through search</label>
    <label locale="ja">C5: 検索可能にする</label>
  </config>
  <config name="conf_Editable" form-type="TOGGLE">
    <label>C6: Allow the file to be edited</label>
    <label locale="ja">C6: 編集可能にする</label>
  </config>
</configs>
<help-page-url>https://support.questetra.com/addons/googledrive-permissioncreate/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/googledrive-permissioncreate/</help-page-url>
  <script><![CDATA[
main();

function main() {
  let fileIds = engine.findDataByNumber(configs.get("conf_FileIdItem"));
  if (fileIds == null) {
    throw "ID isn't set.";
  }
  fileIds += "";
  
  const userId = configs.get("conf_UserID");
  const quser = quserDao.findById(parseInt(userId));
  if (quser == null) {
    throw `User not found: ${userId}`;
  }
  
  const sharedRange = configs.get("conf_SharedRange");
  const domain = configs.get("conf_Domain");
  if (sharedRange === "domain" && domain == ""){
    throw "Domain to share isn't set.";
  }
  const allowFileDiscovery = configs.get("conf_AllowFileDiscovery");
  const editable = configs.get("conf_Editable");
  
  // get OAuth token
  let token;
  try{
    token = httpClient.getGoogleOAuth2Token(quser, "Drive");
  }catch(e){
    throw "This User has not connected with Google Drive.";
  }
  
  fileIds.split("\n").forEach(function(fileId){
    createPermission(token, fileId, sharedRange, domain, allowFileDiscovery, editable);
  });
}

/**
  * Google Drive 上で共有設定をする
  * create permission on Google Drive
  * @param {String} token  Google Drive の Token
  * @param {String} fileId  ファイルの ID
  * @param {String} shareRange  共有範囲
  * @param {String} domain  共有先ドメイン
  * @param {String} allowFileDiscovery  検索可能にするかどうか
  * @param {String} editable  編集可能にするかどうか
  */
function createPermission(token, fileId, shareRange, domain, allowFileDiscovery, editable) {
  const json = {};
  json["role"] = editable == "true" ? "writer" : "reader";
  json["type"] = shareRange == "public" ? "anyone" : "domain";
  if(shareRange !== "public"){
    json["domain"] = domain;
  }
  json["allowFileDiscovery"] = allowFileDiscovery;
  
  const url = `https://www.googleapis.com/drive/v3/files/${fileId}/permissions`;
  const response = httpClient.begin()
    .bearer(token)
    .queryParam("supportsTeamDrives","true")
    .body(JSON.stringify(json), "application/json; charset=UTF-8")
    .post(url);
  const status = response.getStatusCode();
  if (status >= 300) {
    const error = `Failed to create permission:${fileId}\n${status}\n${response.getResponseAsString()}`;
    throw error;
  }
}
  ]]></script>

  <icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADLUlEQVRYR2NkYGBgZBhAALJ81AFE
hUBmYabNj19/dglzM7ERirGerpkshNTA5ImOgvTClGu/fjEq5AfeYdeX+YrT0cv2S3y69kjgVGv7
IjdiHEGUAzKK0nKf8X9peyz5ntv5jty/7qTzTPgML51n+O/rbyaH6f3TjxByBFEOSMxO/XZB/wnH
d6k/DGpnRb82WT/nwhcKF59w/5++VfnmzP45WhQ7IL0wdfZzga8Rt4xfc4MM43zGwkBMKICi4vBt
idoZfbMm43ME3hAAJbx/DL9nHXR+qAEzBOQA2eeCBEMBpD5psv6P+VNnc5HtgOrKuF2XOf5YwnyP
7oiN4XfAoYILEJMgcYYAyPdPBT5uR7ccFg2gUAgX+/I3yvEFHyUJEqcDQNnulOZTDVDCQwegaAAB
g4syPwhlS1CCXL1Xdi+ubInVAbBsh833yNEAcgAb2/8HM9IvwdMIttDAlyAxHIAt4WEzFJQdJT9w
rwDJ2am9DMUXFfiyJYYD0LMdNstBUQDyPSyFg8qJebkXOQglyEO3xFfP7J+diqwOxQGk+F7qI08V
LI+DosxW9UUzoQQJypYcbCxuyCUkigPwJTzkuDe7Ln0DvZQD6c30vqtOqIRET5BwBxCT8ECOsN8r
f4OJgTUNvZyHhR6pCRLuAOTyHldcwhIeejzC1IPSDyhBBuvu42MXwV4NoGdLsAOISXj4fA9zACwU
JgavwJktQQ4DZUtYgoQ6AHehAzMc5HvhV9zM/xkl/uFL7SA5xv8vmAg1XD7//nsLlI7ADiAm/i23
K/y48ywQnNXY9S0ZePlx1zGfP37D60aZN33fONheVoJyETwN4MsBIN+/vxADrngIWU4odDjeH/vP
93kpvK0AdwCszXfc8wFKgQKyXOi1MuPdp5ZclFoOchz/3ZZvnKxvPGC5CK0cwGx8gEo8UNBTw3KI
75fNQ85FGEUxLDvCajtqWQ5KF8ofSzEKMAwHwBIkyAGgoH8iUsSFL8ERinOYPCjoYQkPZ12AKFBS
rj0X+Cb77f9UbmpYjp7wCDoAlCC//xbZQazviFGHnPAIOoAYA6mlhqh+AbUsw2bOgDsAAHEO2FDM
6/Q2AAAAAElFTkSuQmCC</icon>
</service-task-definition>