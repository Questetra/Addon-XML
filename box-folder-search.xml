<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
<last-modified>2021-03-17</last-modified>
<license>(C) Questetra, Inc. (MIT License)</license>
<engine-type>2</engine-type>
<label>Box: Search Folder</label>
<label locale="ja">Box: フォルダ検索</label>
<summary>Search for the folder in the specified folder on Box</summary>
<summary locale="ja">Box の指定フォルダ直下に特定の名前のフォルダがあるかどうか調べます。</summary>
<help-page-url>https://support.questetra.com/addons/box-folder-search/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/box-folder-search/</help-page-url>
<configs>
  <config name="conf_OAuth2" required="true" form-type="OAUTH2" oauth2-setting-name="https://app.box.com/api/oauth2/root_readonly">
    <label>C1: OAuth2 Setting</label>
    <label locale="ja">C1: OAuth2 設定</label>
  </config>
  <config name="ParentFolderId" el-enabled="true">
    <label>C2: Parent Folder ID (Root Folder if blank)</label>
    <label locale="ja">C2: 検索するフォルダの親フォルダの ID (空白の場合ルートフォルダ直下を検索します)</label>
  </config>
  <config name="FolderName" required="true" el-enabled="true">
    <label>C3: Folder Name to search for</label>
    <label locale="ja">C3: 検索するフォルダの名称</label>
  </config>
  <config name="FolderIdItem" form-type="SELECT" select-data-type="STRING">
    <label>C4: Data Item that will save Folder ID</label>
    <label locale="ja">C4: フォルダの ID を保存するデータ項目</label>
  </config>
  <config name="WebViewUrlItem" form-type="SELECT" select-data-type="STRING">
    <label>C5: Data Item that will save Folder URL</label>
    <label locale="ja">C5: フォルダの URL を保存するデータ項目</label>
  </config>
</configs>

<script><![CDATA[
main();
function main(){
  let parentFolderId = configs.get("ParentFolderId");
  if (parentFolderId === "" ||parentFolderId === null) {
    parentFolderId = "0";
  }
  const folderName = configs.get("FolderName");
  if (folderName === "" ||folderName === null) {
    throw "Folder Name is blank";
  }
  //get C4&C5
  const idData = configs.getObject( "FolderIdItem" );
  const urlData = configs.getObject( "WebViewUrlItem" );

  //If neither C4 nor C5 are set,throw error
  if((idData === null || idData === "") && (urlData === null || urlData === "")){
    throw "Neither of Data Items to save result are set.";
  }
  const oauth2 = configs.get("conf_OAuth2");

  const json = searchFolder(oauth2,parentFolderId);
  
  let folderIdList = "";
  let folderUrlList = "";
  let folderCount = 0;
  const folderNum = json.length;
  for(let i = 0; i < folderNum; i++){
    if(json[i].type === "folder" && json[i].name === folderName){
      folderCount++;
      if (folderCount > 1){
        folderIdList += "\n";
        folderUrlList += "\n";
      }
      folderIdList += json[i].id;
      folderUrlList += "https://app.box.com/folder/" + json[i].id;
    }
  }

  if (folderIdList === ""){
    throw "Folder " + folderName + " doesn't exist.";
  }

  //set ID to Data Item
  if (idData !== null) {
    engine.setData(idData,folderIdList);
  }
 
  //set URL to Data Item  
  if (urlData !== null) {
    engine.setData(urlData, folderUrlList);
  }
}

//search folder on box
function searchFolder(oauth2,parentFolderId){
  const url = `https://api.box.com/2.0/folders/${parentFolderId}/items`;
  let marker = "";
  let jsonRes = [];
  const limit = httpClient.getRequestingLimit();
  for(let count = 0; count < limit; count++) {
    const response = httpClient.begin()
      .authSetting(oauth2)
      .queryParam("fields", "id,type,name")
      .queryParam("limit", "1000")
      .queryParam("usemarker","true")
      .queryParam("marker",marker)
      .get(url);
    const status = response.getStatusCode();
    const responseTxt = response.getResponseAsString() + "\n";
    engine.log(`status: ${status}`);
    engine.log(`${responseTxt}`);
    if (status >= 300) {
      throw "Failed to search";
    }
    const json = JSON.parse(responseTxt)
    jsonRes = jsonRes.concat(json.entries);
    
    marker = json['next_marker'];
    if(marker === undefined || marker === '' || marker === null) {
      return jsonRes;
    }
  }
  throw "Too many folders and files are in the specified folder";
}
]]></script>

<icon>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAD/UlEQVRYR82XbWibVRTHf/fJ2jXJ
2qSd65x11aC0YgJWZUwEWZ0D/SJaHYKKmgykbL70Bf2k4IYwZOKWOhFRMM9QZxHUjSEo+7AOlA1E
7WSRThzdqq1tWWxjm7Zrk1y5N+SlydM2XdvN50sebs5z7u+e8z/n3iu4xo9Y1Pz+3x6F5BagAYQb
oX4BSTfIUaAbIboIeY8W63dhAH+vGyZaQLYihLsox1LBiCA4OjA9CmzOZ34Af9gP8kDRE+dPo0GM
AObtR+YimBvAfzaIEC1FrXghIymDmL42KzNrgMBZE8RzC/ld1P8SE9MbyP+mEGA5V16Ykg5MX2vu
8GwAlXNBaFErW6yxFE25msgCaLXHeq9YcMWCaGE6PenqyAEI70bwRrF+lmQn2YPp3a18ZAECYVWv
rrTj0I4bqHLaeOTgn0uay/JjFQXTV5kFUB1OyK9zjYeC9ThKBeW7epYfQHfPlBZSEbBQ/nBHCmDN
zpUCkLoiUgCBcBegenzmUQDO1QaHT0dpqC3T4yd7YrzyxZB+33V/Jds3VbBmtUH/SJzmQwN07ryR
7r4p2jtTNh88uwHPdaU8uP+iVRRPEvI2pgEuADflA6wrtxV8+GPvJBcuzfDY3RXYjBzgfxNU2A0M
AW2fD1Jht/FmUzWx6STuFyyiqDYw03tnGkDmz6QioADUZO98F8HtMHh521o9lpQwNSMxvx/l9PkJ
XtpWxSaPnZFYArfDRmQ8oeFcDhvvHv+Hts5Bax2FvGJeAFUFW97q5Yc/JrWDVx9ay74n1uv3Iz+P
0fRetkIiB+uxlxj80jfFvbfatc2Jnhhb91mGPwWUA1CQgoH9dawrX0VN+zmGxxLa/qnNLj5rrtHv
ShtPf9ifWdnfB+p02X7z6zhNd5Xr8U9PRXnmo6zN7DDIM4R8DXOK8NRrHu65xY7K+QNvX2SDaxXH
Wmqpu75U+1FhVsL78qcxDjfX8ORml05BeZmN6YTUDUalQenh/RMjC4jQogwb6x189eJGKp02YpeT
2AxBWYmgLzLDwGhcw8UTaJG57AaT0xIlJGXTcTyi09HcWMml8QTVLecKAWRuGVo0IvXF1tuc7N1e
rUspnpSE+y+z4+N+/hqJ88nzNdxX58BRajAYjbPn6DB7H1/P70PTPNzRpyf8tr2WjVUleF8/bwGQ
24jU33mt2Fq2yzYaJeTVx7v/0WaktmMxoaohsyEt23pnO4oiHTcXbsfK6JoeSNKUK3oky54D0tNd
vUMp8hAhnz8/rVfpWF648vkjkEmHPqiYSxBmFCn8V3YxyUDoq1krAnWcLrZCokjU1Sy4tKtZfsJS
l9NGhGgA6QZxR8pEngExipTdYHTNt+LiNbBCTSDf7X8FbX8wYecpbwAAAABJRU5ErkJggg==</icon>
</service-task-definition>
