<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>
    <addon-type>START_EVENT_TIMER</addon-type>
    <last-modified>2023-05-25</last-modified>
    <license>(C) Questetra, Inc. (MIT License)</license>
    <engine-type>3</engine-type>
    <label>Start: the number of choices</label>
    <label locale="ja">開始: 選択肢数</label>
    <summary>This item periodically starts process with the number of choices. Each select type data item of each
        process will be set each choice.
    </summary>
    <summary locale="ja">このアイテムは定期的に、選択肢の数だけプロセスを開始します。各プロセスの選択型データ項目には、それぞれの選択肢が設定されます。
    </summary>
    <configs>
        <config name="conf_idData" required="true" form-type="SELECT" select-data-type="SELECT">
            <label>C1: Select type Data item</label>
            <label locale="ja">C1: 選択型データ項目</label>
        </config>
    </configs>
    <help-page-url>https://support.questetra.com/bpmn-icons/start-event-data-type-select/</help-page-url>
    <help-page-url locale="ja">https://support.questetra.com/ja/bpmn-icons/start-event-data-type-select/</help-page-url>

    <script><![CDATA[
/**
 * @param {number} limit 選択肢数の上限
 * @returns {Array} items 選択肢の値一覧
 * @returns {string} items[].id 選択肢の値
 */
const list = (limit) => {
    const def = configs.getObject("conf_idData");
    const items = [];
    itemDao.findAll(def).forEach(item => {
        items.push({
            id: item.getValue()
        });
    });
    return items;
};
]]></script>

    <icon>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAqhJREFUWEfF
        l99LU2EYxz/HC4sGlYsimkSkyFCkDNZl0JBuvEu6aXVRDc7Mm4IkwRsFEZKgLiQ3cE2o5t3+AC8M
        YldZaheTFUJdFAhpS8Qpbu7E2elt54fT7eS2c7XDeb7P893zfJ/neV+JGj9SyfFDHEHhOhJXUehA
        4hzQ8BefQuEbEvMovEUihky6FN/7E4hwmm0eAwHgcClOgS0gSD1PuMPyXpi9CQQJIPEUcJQY2Gy2
        gcIjAgSL4YsTCPEC6LEZ2AwbR+b+br52JxDiDXDzgIILN1FkfGafVgIH+8/3zYSRgFbzcRXVdbYL
        5yEnmVyG+HKclmMtuBwuW0lJ/k4y+3NWwyr06DVRIKCpfUkILnEjQWtDK+uZdXrjvfRf7M+/23nC
        yTD+d34B3aCeZtEdBQIhngEPhFUFCaghniPzUP2hEVCHDKzq+3zk8giNjkY2s5tEPkfwury4j7vt
        JICZHzNMfpnUY9U5cUIdVhqBILeQeKW38J7x5mv+vxrYUXZYWF1gMbVoJK9wmwCvRQbCwF29RYVL
        oIZ6icw9kYE5JDqqSkBhngCXRAZ+6RZLnsfElQk8pzysbK0w8H6A7vPddLo6qZPqytJBNpfNa2gs
        MWbGpZBxCgKK+avQQDqbZvr7NJ6THltzoKgG1IAyUlECVdCAgYClBFUgoCtBEIsIo94obc421rbX
        GPwwiN/tz7+X++SUHFNLU4x+GjW3oUGEljYsN5ANe0MbWgaRuQR9F/pod7bbiAOmXSCWkmEQWUZx
        hTVgGsXaPjAso9i1GE1Hm1DbcHhuGF+zz5YGVNexrzGGPg7ps2daRuon0zq2levSQEXWsbaU/h1I
        SvNlw6rogUT4qumRrECihofSymSizGO5IFHTi4kgUdOrmV7kNbuc2ui0ciB/ACJqPjBY5QcoAAAA
        AElFTkSuQmCC
    </icon>

    <test><![CDATA[
test('test', () => {
    // <script> のスクリプトを実行
    execute();

    const def = engine.createDataDefinition('選択型', 1, 'q_select', 'SELECT_SINGLE');
    configs.putObject('conf_idData', def);
    itemDao.addItem(def, engine.createItem('true', 'はい'));
    itemDao.addItem(def, engine.createItem('false', 'いいえ'));

    const items = list();
    expect(items.length).toEqual(2);
    expect(items[0].id).toEqual('true');
    expect(items[1].id).toEqual('false');
});
]]></test>

</service-task-definition>