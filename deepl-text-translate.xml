<?xml version="1.0" encoding="UTF-8"?><service-task-definition>

<label>DeepL: Text, Translate</label>
<label locale="ja">DeepL: テキスト, 翻訳</label>

<help-page-url>https://support.questetra.com/addons/deepl-text-translate/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/deepl-text-translate/</help-page-url>

<summary>Translates using DeepL API v2. Specifying the target language is mandatory, but specifying the source language is optional (Detected). It is also possible to translate into more formal or broken sentences (Formality).</summary>
<summary locale="ja">DeepL API（v2）を用いて機械翻訳します。翻訳先言語（ターゲット言語）の指定は必須ですが、翻訳元言語（ソース言語）の指定は任意です（自動検出されます）。フォーマルな文章や砕けた文章に翻訳することも可能です。</summary>

<configs>
  <config name="StrConfU" required="true" el-enabled="true" form-type="TEXTFIELD">
    <label>U: Set Authentication Key</label>
    <label locale="ja">U: 認証キー（Authentication Key）をセットしてください</label>
  </config>
  <config name="StrConfA1" required="false" el-enabled="true" form-type="TEXTFIELD">
    <label>A1: Set Source Lang Code (eg "EN")</label>
    <label locale="ja">A1: 翻訳元の言語コードをセットしてください （例 "JA"）</label>
  </config>
  <config name="StrConfA2" required="true" el-enabled="true" form-type="TEXTAREA">
    <label>A2: Set Source Text</label>
    <label locale="ja">A2: 翻訳元ソーステキストをセットしてください</label>
  </config>
  <config name="StrConfA3" required="false" el-enabled="true" form-type="TEXTFIELD">
    <label>A3: Set Source Text Format "text" (default) or "xml"</label>
    <label locale="ja">A3: 翻訳元ソースのフォーマットをセットしてください （デフォルト "text" or "xml"）</label>
  </config>
  <config name="StrConfB1" required="true" el-enabled="true" form-type="TEXTFIELD">
    <label>B1: Set Target Lang Code (eg "JA", "DE")</label>
    <label locale="ja">B1: 翻訳先の言語コードをセットしてください (例 "EN-US", "DE")</label>
  </config>
  <config name="SelectConfB2" required="true" form-type="SELECT" select-data-type="STRING">
    <label>B2: Select STRING that stores Translated Text (update)</label>
    <label locale="ja">B2: 翻訳されたテキストが格納される文字列型データ項目を選択してください (更新)</label>
  </config>
  <config name="StrConfB3" required="false" el-enabled="true" form-type="TEXTFIELD">
    <label>B3: Set Formality Option (Formal: "more", Informal: "less")</label>
    <label locale="ja">B3: フォーマル化オプションをセットしてください (よりフォーマルに: "more", より砕けて: "less")</label>
  </config>
</configs>

<engine-type>2</engine-type>
<license>(C) Questetra, Inc. (MIT License)</license>
<last-modified>2021-03-16</last-modified>

<script><![CDATA[// GraalJS Script (engine type: 2)

//////// START "main()" /////////////////////////////////////////////////////////////////
main();
function main(){ 

//// == Config Retrieving / 工程コンフィグの参照 ==
const strAuthKey          = configs.get      ( "StrConfU" );     /// REQUIRED
const strSourceLang       = configs.get      ( "StrConfA1" );    // NotRequired
  if( strSourceLang     === "" ){
    engine.log( " AutomatedTask ConfigWarning:" +
                " Config {A1:SourceLang} is empty" );
  }else{
    engine.log( " AutomatedTask Config: SourceLang: " + strSourceLang );
  }
const strSourceText       = configs.get      ( "StrConfA2" );    /// REQUIRED
  if( strSourceText     === "" ){
    throw new Error( "\n AutomatedTask ConfigError:" +
                     " Config {A2:SourceText} is empty \n" );
  }
let   strSourceFormat     = "text";
let   strSourceFormatTmp  = configs.get      ( "StrConfA3" );    // NotRequired
  if( strSourceFormatTmp === "xml" ){
      strSourceFormat     = "xml";
  }else if( strSourceFormatTmp === "html" ){ // regarded as "xml" for versatility
      strSourceFormat     = "xml";
  }
const strTargetLang       = configs.get      ( "StrConfB1" );    /// REQUIRED
  if( strTargetLang     === "" ){
    throw new Error( "\n AutomatedTask ConfigError:" +
                     " Config {B1:TargetLang} is empty \n" );
  }
const strPocketTargetText = configs.getObject( "SelectConfB2" ); /// REQUIRED
let   strFormality        = configs.get      ( "StrConfB3" );    // NotRequired


//// == Data Retrieving / ワークフローデータの参照 ==
// (Nothing. Retrieved via Expression Language in Config Retrieving)


//// == Calculating / 演算 ==
/// (DeepL > Translating text)
/// https://www.deepl.com/docs-api/translating-text/request/
// request1, prepare
let postUri1 = "https://api.deepl.com/v2/translate";
let request1 = httpClient.begin(); // HttpRequestWrapper
    request1 = request1.queryParam( "auth_key",     strAuthKey );
    request1 = request1.queryParam( "text",         strSourceText );
    if( strSourceFormat === "xml" ){
      request1 = request1.queryParam( "tag_handling", strSourceFormat );
    }
    if( strSourceLang !== "" ){
      request1 = request1.queryParam( "source_lang",  strSourceLang );
    }
    request1 = request1.queryParam( "target_lang",  strTargetLang );
// request1, try
const response1     = request1.post( postUri1 ); // HttpResponseWrapper
engine.log( " AutomatedTask ApiRequest1 Start: " + postUri1 );
const response1Code = response1.getStatusCode() + "";
const response1Body = response1.getResponseAsString() + "";
engine.log( " AutomatedTask ApiResponse Status: " + response1Code );
if( response1Code !== "200"){
  throw new Error( "\n AutomatedTask UnexpectedResponseError: " +
                    response1Code + "\n" + response1Body + "\n" );
}
// response1, parse
engine.log( response1Body ); // debug
/*
{
  "translations": [
    {
      "detected_source_language":"EN",
      "text":"私は猫です。まだ、名前はありません。どこで生まれたのかもわかりません。"
    }
  ]
}
*/
const response1Obj  = JSON.parse( response1Body );
let   strTargetLangDetected = response1Obj.translations[0].detected_source_language;
engine.log( " AutomatedTask ApiResponce1: Detected Lang: " + strTargetLangDetected );
let   strTargetText = response1Obj.translations[0].text;

//// == Data Updating / ワークフローデータへの代入 ==
engine.setData( strPocketTargetText,  strTargetText );


} //////// END "main()" /////////////////////////////////////////////////////////////////



/*
Notes:
- Translates String in the workflow. Machine translation is performed using DeepL API v2.
    - Charged for Cloud Translation based on monthly usage.
    - https://www.deepl.com/pro#developer
- The input text can be plain text or XML. (any XML tags in the input not be translated)
    - https://www.deepl.com/docs-api/handling-xml/
- You need an authentication key to access to the API.
    - Account Settings: https://www.deepl.com/pro-account/plan
- The request size should not exceed 30k bytes.

Notes-ja:
- ワークフローに格納されている「文字列」を自動翻訳します。DeepL API v2 で機械翻訳されます。
    - 月間使用量に基づいて料金が請求されます。
    - https://www.deepl.com/pro#developer
- プレーンテキストまたはXMLフォーマットの文字列を翻訳します。（XMLタグは翻訳されません）
    - https://www.deepl.com/docs-api/handling-xml/
- APIにアクセスするための認証キーが必要です。
    - Account Settings: https://www.deepl.com/pro-account/plan
- リクエストの上限は 30k bytes です。
*/


/*
APPENDIX
- Supported Language Codes in DeepL API (v2) - Can be specified in lowercase
    - Language of the text to be translated (Source Lang)
        - "DE" - German
        - "EN" - English
        - "FR" - French
        - "IT" - Italian
        - "JA" - Japanese
        - "ES" - Spanish
        - "NL" - Dutch
        - "PL" - Polish
        - "PT" - Portuguese (all Portuguese varieties mixed)
        - "RU" - Russian
        - "ZH" - Chinese
    - The language into which the text should be translated. (Target Lang)
        - "DE" - German
        - "EN-GB" - English (British)
        - "EN-US" - English (American)
        - "EN" - English (for backward compatibility; please select EN-GB or EN-US instead)
        - "FR" - French
        - "IT" - Italian
        - "JA" - Japanese
        - "ES" - Spanish
        - "NL" - Dutch
        - "PL" - Polish
        - "PT-PT" - Portuguese (all Portuguese varieties excluding Brazilian Portuguese)
        - "PT-BR" - Portuguese (Brazilian)
        - "PT" - Portuguese (for backward compatibility; please select PT-PT or PT-BR instead)
        - "RU" - Russian
        - "ZH" - Chinese
    - https://www.deepl.com/docs-api/translating-text/request/
- Uncommon character sequences, which may be recognized markers within your system
    - Might get translated or removed, resulting in a corrupted structure.
    - Convert your markers to XML tags and enable XML handling.
    - If "html" is set in Source Text Format, it is assumed that "xml" is set.
- Error Example
    - AutomatedTask ApiResponse Status: 400
    - AutomatedTask UnexpectedResponseError: 400
    - {"message":"Value for 'target_lang' not supported."}

APPENDIX-ja
- DeepL API (v2) でサポートされている言語コード（小文字指定も可）
    - 翻訳元言語（ソース言語）
        - "DE" - German
        - "EN" - English
        - "FR" - French
        - "IT" - Italian
        - "JA" - Japanese
        - "ES" - Spanish
        - "NL" - Dutch
        - "PL" - Polish
        - "PT" - Portuguese (全ポルトガル語)
        - "RU" - Russian
        - "ZH" - Chinese
    - 翻訳先言語（ターゲット言語）
        - "DE" - German
        - "EN-GB" - English (British)
        - "EN-US" - English (American)
        - "EN" - English (下位互換のためのコード。推奨は EN-GB もしくは EN-US)
        - "FR" - French
        - "IT" - Italian
        - "JA" - Japanese
        - "ES" - Spanish
        - "NL" - Dutch
        - "PL" - Polish
        - "PT-PT" - Portuguese (ブラジルを除くポルトガル語)
        - "PT-BR" - Portuguese (ブラジルのポルトガル語)
        - "PT" - Portuguese (下位互換のためのコード。推奨は PT-PT もしくは PT-BR)
        - "RU" - Russian
        - "ZH" - Chinese
    - https://www.deepl.com/docs-api/translating-text/request/
- システム利用想定のマーカー文字等
    - 翻訳または削除され、構造が破損する可能性があります。
    - 必要に応じて、マーカーをXMLタグに変換し、XML処理を有効にします。
    - ソースフォーマットに "html" がセットされた場合、"xml" と読み替えます。
- Error Example
    - AutomatedTask ApiResponse Status: 400
    - AutomatedTask UnexpectedResponseError: 400
    - {"message":"Value for 'target_lang' not supported."}
*/


]]></script>


<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADwklEQVRYR8WXe0hTURzHv8dHTrdm
9sBIKKH+qEll+aisDDVXVBYoab4qX+GjUisweksGBVJWUoHZm8yw/tCo2BKLigIrKdgMShAps4fa
VtZ8ntjd7trmvXdXKXb/Gju/3+98zvk9D4GTPyJ2/ylBMV4/fxtiCUgEJXQeQPwB+Jj1uwHaSihp
oqANMk/J7faXdb/E2HYIIFWsmuxKBooAZAOQiDEKwADg3CB1O9ajvdshpCMI4K2IzqaElAKQitzY
XqyHULpLp1Wf49PnBZAHKM8AyBnlxvZqZ/UaVS6XLU4AeUD0dYAk/qPNzWZolV6jTrK3OQxA7Mk3
xq5ESuwKfOvS4URlNRpfN4vhHXYTNgBmn58VsrQkZA6KspMRFjwbbq6ujKj+Zw+q6+px/Hw12j9/
EwQhlOZYx4QFwBzt7/kCborvRJTsysLqyDBIPMZwbvK16zvKL99CWeVNIYieQeo2g80OC4A8QHkC
QAGXZkFGPLZuisOk8eMcXjOlFG+aW1B88iLqn77gky/Ta1SFxkUGgCkyht5Orjwv3ZuH9IQ1cHVx
YYwZevugfdeKaX6+mODjzQvUrfuBnSXluHXvIZeMQSbxmGAsVgyAXBGdAkKucknWnj+KZQvnWZbu
NjxD4rZDKMpJxs6sRHiMceeE6OsfQFllNY6UX+GGpDRVr1VfYwC8FcpKSpAuBuBtSxvyD5VhrMwL
K8JDkRATBblseJ1yBEAoLui0qgzTDQREvwLI32NakdjfALtk9HXrhw5UVNUifEEg87dihj+m+vky
vx0BALRJr1HPNwMou6wai81F8AGwQoNDQ7jz4Ck27ijBlqS1KC7MgJenRAQAuvUa1XgWgPJFkxCA
MSBb2j5CLpXi9OUaRIYFQbk0FC4uRAwA9BoVGTGAMbobnr2Cu7sb1I8bkRG/BnNmTQcxmbJ8jl0A
GwDRLqhVP0Fq4WGmLuzJS4XUy3N0WQAbF/AHoX0d+PSlExVVdVCGh2BBoGLYyVkaB3UANkEolIYy
qScObE9D4rrlnOlmf3w2O45X3MCV2/d5C5VtGgoUItbCzOlTUZSTglURi3h7QWe3Dqcu1TjqBSaT
1oVIqBTbHyFqcTAO5qdxBt6j501Ym7mb99RWC7al2FSM+JsRl8Vtm+OQuSEG0/wmW+JgBAC2zci4
gaN2zAVhHx8iAbjbsaknMEOo4EDCBRIydxb2bd2Evv5+rM/dL+gC3oGE1RI7kolxNIeM8Ej2F8KJ
Q+l/uomRjeUshFMfJiyEU59m1kHktMfpKKNdtNofFmLMMLzOuicAAAAASUVORK5CYII=
</icon>

</service-task-definition>
